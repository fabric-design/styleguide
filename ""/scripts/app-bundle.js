define('environment',["exports"], function (exports) {
  "use strict";

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = {
    debug: true,
    testing: true
  };
});
define('prop-types',["exports"], function (exports) {
  "use strict";

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.oneOf = oneOf;
  exports.oneOfType = oneOfType;
  function oneOf() {}
  function oneOfType() {}
  var func = exports.func = {};
});
define('app/articles',["exports"], function (exports) {
    "use strict";

    Object.defineProperty(exports, "__esModule", {
        value: true
    });
    exports.default = [{
        "name": "badge",
        "category": "atoms",
        "title": "Badges",
        "html": "<h2 id=\"defaultbadge\">Default Badge</h2>\n<p>We have default filter badge:\n</br></br>\n<span class=\"badge\">\n    <span>ID: something</span>\n    <span class=\"icon-cross\"></span>\n</span></p>\n<pre><code class=\"html language-html\">&lt;span class=\"badge\"&gt;\n    &lt;span&gt;ID: something&lt;/span&gt;\n    &lt;span class=\"icon-cross\"&gt;&lt;/span&gt;\n&lt;/span&gt;\n</code></pre>\n<p></br></br></p>\n<h2 id=\"changecolorofbadge\">Change color of badge</h2>\n<p>To change color of text and background color of badge in your scss file you need to use badge mixin.\nFirstly, you need to add color of text and then color of background:\n</br></br>\n<span class=\"badge\" style=\"color: #FF6900; background-color: #FFF6C4\">\n    <span>ID: something</span>\n    <span class=\"icon-cross\"></span>\n</span></p>\n<pre><code class=\"scss language-scss\">.badge {\n  @include badge(14px, $zalando-orange, $egg-white)\n}\n</code></pre>\n<p></br></br>\nOf course, you can create your own class:</p>\n<pre><code class=\"scss language-scss\">.badge-yellow {\n  @include badge($grandis, $west-side)\n}\n</code></pre>\n<p></br></br></br></p>",
        "headings": ["Default Badge", "Change color of badge"]
    }, {
        "name": "buttons",
        "category": "atoms",
        "title": "Buttons",
        "html": "<h2 id=\"buttonstyles\">Button Styles</h2>\n<p>We have five button styles. Primary, secondary, toggle, flat and icon buttons. \nGiving your primary, secondary and tertiary action buttons the proper visuel weight facilitates user flow.\nWithout proper visual weight, you can cause the user to make mistakes.\n</br></br>\nIt is importatnt that the primary button have the strongest visual weight and identifies the primary action in a set of buttons.\n</br></br>\n<button>Primary Button</button></p>\n<pre><code class=\"html language-html\">&lt;button&gt;Primary button&lt;/button&gt; \n</code></pre>\n<p></br></br>\nA <strong>secondary button</strong> isn't as import as a primary one, so it shouldn't call as much attention. This button could be used for actions such as Cancel, Abort, Reset or Go back. \n</br></br>\n<button class=\"mod-secondary\">Secondary Button</button></p>\n<pre><code class=\"html language-html\">&lt;button class=\"mod-secondary\"&gt;Secondary Button&lt;/button&gt;\n</code></pre>\n<p></br></br>\n<strong>Toggle buttons</strong> allow single choice to be selected or deselected\n</br></br>\n<button class=\"mod-secondary mod-toggle\">Toggle Button</button></p>\n<pre><code class=\"html language-html\">&lt;button class=\"mod-secondary mod-toggle\"&gt;Toggle Button&lt;/button&gt;\n</code></pre>\n<p></br></br>\n<strong>Flat buttons</strong> looks like a normal anchor but on click they become the look of an button for a short time.\n</br></br>\n<button class=\"mod-flat\">Flat button</button></p>\n<pre><code class=\"html language-html\">&lt;button class=\"mod-flat\"&gt;Flat button&lt;/button&gt;\n</code></pre>\n<p></br></br>\nA button could also just contain an <strong>icon</strong>\n</br></br>\n<button class=\"mod-secondary mod-collapse\"><span class=\"icon-pencil-stroke icon32\"></span></button></p>\n<pre><code class=\"html language-html\">&lt;button class=\"mod-secondary mod-collapse\"&gt;\n    &lt;span class=\"icon-pencil-stroke icon32\"&gt;&lt;/span&gt;\n&lt;/button&gt;\n</code></pre>\n<p></br></br></p>\n<h2 id=\"buttonstates\">Button states</h2>\n<p>Buttons can have different states which can be represented using classes.\n</br></br>\n<strong>Disabled</strong>\n</br></br>\n<button class=\"is-disabled\">Disabled button</button></p>\n<pre><code class=\"html language-html\">&lt;button class=\"is-disabled\"&gt;Disabled button&lt;/button&gt;\n</code></pre>\n<p></br></br>\n<strong>Active</strong>\n</br></br>\n<button class=\"is-active\">Active button</button></p>\n<pre><code class=\"html language-html\">&lt;button class=\"is-active\"&gt;Active button&lt;/button&gt;\n</code></pre>\n<p></br></br>\n<strong>Toggled</strong>\n</br></br>\n<button class=\"mod-toggle is-active\">Toggled button</button></p>\n<pre><code class=\"html language-html\">&lt;button class=\"mod-toggle is-active\"&gt;Toggled button&lt;/button&gt;\n</code></pre>\n<p></br></br></p>\n<h2 id=\"buttonsizes\">Button sizes</h2>\n<p>All of our buttons can be small, normal or large. For normal buttons just do nothing and for small or large buttons add a modifier class.\n</br></br>\n<button class=\"mod-large\">Large button</button>\n<button>Normal button</button>\n<button class=\"mod-small\">Small button</button></p>\n<pre><code class=\"html language-html\">&lt;button class=\"mod-large\"&gt;Large button&lt;/button&gt;\n&lt;button&gt;Normal button&lt;/button&gt;\n&lt;button class=\"mod-small\"&gt;Small button&lt;/button&gt;\n</code></pre>\n<p></br></br></br></br></p>",
        "headings": ["Button Styles", "Button states", "Button sizes"]
    }, {
        "name": "cards",
        "category": "atoms",
        "title": "Cards",
        "html": "<h2 id=\"usage\">Usage</h2>\n<p>Cards are containers which are visually separated from the background via a\nshadow to create a 3d effect.\n</br></br></p>\n<div class=\"card\">\n  <div class=\"card-title\">Test title</div>\n  <div class=\"card-content\">This is my card content</div>\n  <div class=\"card-actions\"><button>Action</button></div>\n</div>\n<pre><code class=\"html language-html\">&lt;div class=\"card\"&gt;\n  &lt;div class=\"card-title\"&gt;Test title&lt;/div&gt;\n  &lt;div class=\"card-content\"&gt;This is my card content&lt;/div&gt;\n  &lt;div class=\"card-actions\"&gt;&lt;button&gt;Action&lt;/button&gt;&lt;/div&gt;\n&lt;/div&gt;\n</code></pre>\n<p></br></br></p>",
        "headings": ["Usage"]
    }, {
        "name": "forms",
        "category": "atoms",
        "title": "Forms",
        "html": "<h2 id=\"inputs\">Inputs</h2>\n<p>Our forms consist in general of text inputs, selects which will be shown as dropdown, labels, buttons and custom elements like the date picker.\nThe button, date picker and dropdown related part can be found on it's separate page. \n</br></br>\nA simple <strong>text input</strong> can have the types text, url, password, tel, number, color or email. \n</br></br>\n<input type=\"text\" placeholder=\"Wholesale rockz\" /></p>\n<pre><code class=\"html language-html\">&lt;input type=\"text\" placeholder=\"Wholesale rockz\" /&gt;\n</code></pre>\n<p></br></br>\n<strong>Textareas</strong> looks like an normal text input but you can resize it vertically. <strong>Only vertically</strong> \n</br></br>\n<textarea>Wholesale rockz</textarea></p>\n<pre><code class=\"html language-html\">&lt;textarea&gt;Wholesale rockz&lt;/textarea&gt;\n</code></pre>\n<p></br></br>\n<strong>Selects</strong> looks similar to text inputs but with a dropdown list. \n</br></br>\n<select>\n    <option>Wholesale rockz</option>\n    <option>Wholesale still rockz</option>\n    <option>Wholesale rockz for sure</option>\n</select></p>\n<pre><code class=\"html language-html\">&lt;select&gt;\n    &lt;option&gt;Wholesale rockz&lt;/option&gt;\n    &lt;option&gt;Wholesale still rockz&lt;/option&gt;\n    &lt;option&gt;Wholesale rockz for sure&lt;/option&gt;\n&lt;/select&gt;\n</code></pre>\n<p></br></br></p>\n<h2 id=\"labels\">Labels</h2>\n<p>All of our labels are displayed above the inputs\n</br></br>\n<label class=\"mod-large\">Does wholesale rock?</label>\n<input type=\"text\" value=\"yes\"/></p>\n<pre><code class=\"html language-html\">&lt;label class=\"mod-large\"&gt;Does wholesale rock?&lt;/label&gt;\n&lt;input type=\"text\" value=\"yes\"/&gt;\n</code></pre>\n<p></br></br>\nTo mark an input as <strong>required</strong> add the required class to the label\n</br></br>\n<label class=\"required mod-large\">Does wholesale rock?</label>\n<input type=\"text\" value=\"yes\"/></p>\n<pre><code class=\"html language-html\">&lt;label class=\"required mod-large\"&gt;Does wholesale rock?&lt;/label&gt;\n&lt;input type=\"text\" value=\"yes\"/&gt;\n</code></pre>\n<p></br></br></p>\n<h2 id=\"toggles\">Toggles</h2>\n<p>We support common checkboxes, radio buttons and on/off switches\n</br></br>\n<strong>Checkboxes</strong> consists of an label and an input element. Important is that the label is placed directly after the input element.\nFor better user experience you should add an id attribute on the input and reference on it via an from attribute on the label.\n</br></br>\n<input type=\"checkbox\" id=\"vote\" name=\"vote\" checked />\n<label for=\"vote\">Is wholesale sexy?</label></p>\n<pre><code class=\"html language-html\">&lt;input type=\"checkbox\" id=\"vote\" name=\"vote\" checked /&gt;\n&lt;label for=\"vote\"&gt;Is wholesale sexy?&lt;/label&gt;\n</code></pre>\n<p></br></br>\n<strong>Radio buttons</strong>  markup looks similar to checkboxes except that you specify the type as 'radio' and that you add a name to create a radio group. \n</br></br>\n<input type=\"radio\" name=\"action\" value=\"rockz\" id=\"rockz\" checked/>\n<label for=\"rockz\">Wholesale rockz</label>\n<input type=\"radio\" name=\"action\" value=\"sux\" id=\"sux\"/>\n<label for=\"sux\">Wholesale sux</label></p>\n<pre><code class=\"html language-html\">&lt;input type=\"radio\" name=\"action\" value=\"nothing\" id=\"nothing\" checked/&gt;\n&lt;label for=\"nothing\"&gt;Do nothing&lt;/label&gt;\n&lt;input type=\"radio\" name=\"action\" value=\"something\" id=\"something\"/&gt;\n&lt;label for=\"something\"&gt;Do something&lt;/label&gt;\n</code></pre>\n<p></br></br>\n<strong>Switches</strong> requires the input to be from type <em>checkbox</em> and to have the class <em>.mod-switch</em>.\n</br></br>\n<input type=\"checkbox\" class=\"mod-switch\" id=\"switch\"/>\n<label for=\"switch\">Off/On</label></p>\n<pre><code class=\"html language-html\">&lt;input type=\"checkbox\" class=\"mod-switch\" id=\"switch\"/&gt;\n&lt;label for=\"switch\"&gt;Off/On&lt;/label&gt;\n</code></pre>\n<p></br></br>\n<strong>Reverse order</strong> of input and label, so the label is on the right side of the toggle, can be done by wrapping the toggle and label with the class <em>.mod-toggle-reverse</em>.\n</br></br></p>\n<div class=\"mod-toggle-reverse\">\n    <input type=\"checkbox\" class=\"mod-switch\" id=\"switch2\"/>\n    <label for=\"switch2\">Off/On</label>\n</div>\n<pre><code class=\"html language-html\">&lt;div class=\"mod-toggle-reverse\"&gt;\n    &lt;input type=\"checkbox\" class=\"mod-switch\" id=\"switch2\"/&gt;\n    &lt;label for=\"switch2\"&gt;Off/On&lt;/label&gt;\n&lt;/div&gt;\n</code></pre>\n<p></br></br></br></p>",
        "headings": ["Inputs", "Labels", "Toggles"]
    }, {
        "name": "icons",
        "category": "atoms",
        "title": "Icons",
        "html": "<h2 id=\"availableicons\">Available Icons</h2>\n<ul class=\"icon-list\">\n    <li><span class=\"icon-filter icon24\"></span><span class=\"text\">.icon-filter</span></li>\n    <li><span class=\"icon-sort-down icon24\"></span><span class=\"text\">.icon-sort-down</span></li>\n    <li><span class=\"icon-arrow_right_circle icon24\"></span><span class=\"text\">.icon-arrow_right_circle</span></li>\n    <li><span class=\"icon-zalando icon24\"></span><span class=\"text\">.icon-zalando</span></li>\n    <li><span class=\"icon-dot icon24\"></span><span class=\"text\">.icon-dot</span></li>\n    <li><span class=\"icon-ok icon24\"></span><span class=\"text\">.icon-ok</span></li>\n    <li><span class=\"icon-checkmark-checkbox icon24\"></span><span class=\"text\">.icon-checkmark-checkbox</span></li>\n    <li><span class=\"icon-arrow_left_circle icon24\"></span><span class=\"text\">.icon-arrow_left_circle</span></li>\n    <li><span class=\"icon-power icon24\"></span><span class=\"text\">.icon-power</span></li>\n    <li><span class=\"icon-warning-circle icon24\"></span><span class=\"text\">.icon-warning-circle</span></li>\n    <li><span class=\"icon-x icon24\"></span><span class=\"text\">.icon-x</span></li>\n    <li><span class=\"icon-left icon24\"></span><span class=\"text\">.icon-left</span></li>\n    <li><span class=\"icon-right icon24\"></span><span class=\"text\">.icon-right</span></li>\n    <li><span class=\"icon-check icon24\"></span><span class=\"text\">.icon-check</span></li>\n    <li><span class=\"icon-info-circled-alt icon24\"></span><span class=\"text\">.icon-info-circled-alt</span></li>\n    <li><span class=\"icon-attention-alt icon24\"></span><span class=\"text\">.icon-attention-alt</span></li>\n    <li><span class=\"icon-cancel-circled icon24\"></span><span class=\"text\">.icon-cancel-circled</span></li>\n    <li><span class=\"icon-magnifiying-glass icon24\"></span><span class=\"text\">.icon-magnifiying-glass</span></li>\n    <li><span class=\"icon-pencil-stroke icon24\"></span><span class=\"text\">.icon-pencil-stroke</span></li>\n    <li><span class=\"icon-sort-up icon24\"></span><span class=\"text\">.icon-sort-up</span></li>\n    <li><span class=\"icon-warning-triangle icon24\"></span><span class=\"text\">.icon-warning-triangle</span></li>\n    <li><span class=\"icon-cross icon24\"></span><span class=\"text\">.icon-cross</span></li>\n    <li><span class=\"icon-bell icon24\"></span><span class=\"text\">.icon-bell</span></li>\n    <li><span class=\"icon-calendar icon24\"></span><span class=\"text\">.icon-calendar</span></li>\n    <li><span class=\"icon-gear icon24\"></span><span class=\"text\">.icon-gear</span></li>\n    <li><span class=\"icon-heart icon24\"></span><span class=\"text\">.icon-heart</span></li>\n    <li><span class=\"icon-home icon24\"></span><span class=\"text\">.icon-home</span></li>\n    <li><span class=\"icon-locked icon24\"></span><span class=\"text\">.icon-locked</span></li>\n    <li><span class=\"icon-paperclip icon24\"></span><span class=\"text\">.icon-paperclip</span></li>\n    <li><span class=\"icon-lightbulb icon24\"></span><span class=\"text\">.icon-lightbulb</span></li>\n    <li><span class=\"icon-checkmark-circle icon24\"></span><span class=\"text\">.icon-checkmark-circle</span></li>\n    <li><span class=\"icon-circle icon24\"></span><span class=\"text\">.icon-circle</span></li>\n</ul>\n<h2 id=\"iconsizes\">Icon sizes</h2>\n<p>Our icons are in general displayed in one of 4 sizes. Those can be 16x16, 24x24, 32x32 or 48x48 pixels.\nTo achieve this simply add one of the following classes to your icon: icon16, icon24, icon32 or icon48\n</br></br>\n<span class=\"icon-lightbulb icon48\"></span>\n<span class=\"icon-lightbulb icon32\"></span>\n<span class=\"icon-lightbulb icon24\"></span>\n<span class=\"icon-lightbulb icon16\"></span></p>\n<pre><code class=\"html language-html\">&lt;span class=\"icon-lightbulb icon48\"&gt;&lt;/span&gt;\n&lt;span class=\"icon-lightbulb icon32\"&gt;&lt;/span&gt;\n&lt;span class=\"icon-lightbulb icon24\"&gt;&lt;/span&gt;\n&lt;span class=\"icon-lightbulb icon16\"&gt;&lt;/span&gt;\n</code></pre>\n<p></br></br></p>\n<h2 id=\"loader\">Loader</h2>\n<p>To show our <strong>spinner</strong> aka loader you have to add a division element containing an span to your page.\n</br></br></p>\n<div class=\"icon-zalando mod-spinner\"><span></span></div>\n<pre><code class=\"html language-html\">&lt;div class=\"icon-zalando mod-spinner\"&gt;&lt;span&gt;&lt;/span&gt;&lt;/div&gt;\n</code></pre>\n<p></br></br></br></p>",
        "headings": ["Available Icons", "Icon sizes", "Loader"]
    }, {
        "name": "spacings",
        "category": "designsystem",
        "title": "Space in Design Systems",
        "html": "<h2 id=\"spacefundamentals\">Space Fundamentals</h2>\n<p>It's based on <a href=\"https://medium.com/eightshapes-llc/space-in-design-systems-188bcbae0d62\">Eight Shapes 'Space In Design System'</a>\n<img src=\"https://cloud.githubusercontent.com/assets/1137569/24362344/c41ecc34-130c-11e7-9937-e1fcc5722900.png\" alt=\"Fabric Spacings\" title=\"Fabric Spacings\" />\n</br></br></p>\n<pre><code class=\"scss language-scss\">$space-xxs: 0.25rem; // 4px\n$space-xs: 0.5rem; // 8px\n$space-s: 0.75rem; // 12px\n$space-m: 1rem; // 16px\n$space-default: $space-m;\n$space-l: 1.5rem; // 24px\n$space-xl: 2rem; // 32px\n$space-xxl: 4rem; // 64px\n</code></pre>\n<p></br></br></p>\n<h2 id=\"inset\">Inset</h2>\n<p></br></br></p>\n<pre><code class=\"scss language-scss\">@include inset-spacing(\"m\");\n@include inset-spacing(\"l\");\n@include inset-spacing(\"xl\");\n</code></pre>\n<p></br></br></p>\n<h2 id=\"insetsquish\">Inset Squish</h2>\n<p></br></br></p>\n<pre><code class=\"scss language-scss\">@include inset-spacing-squish(\"xs\");\n@include inset-spacing-squish(\"m\");\n@include inset-spacing-squish(\"xl\");\n</code></pre>\n<p></br></br></p>\n<h2 id=\"insetstretch\">Inset Stretch</h2>\n<p></br></br></p>\n<pre><code class=\"scss language-scss\">@include inset-spacing-stretch(\"xs\");\n@include inset-spacing-stretch(\"s\");\n@include inset-spacing-stre tch(\"m\");\n@include inset-spacing-stretch(\"l\");\n</code></pre>\n<p></br></br></p>\n<h2 id=\"spacestack\">Space  Stack</h2>\n<p></br></br></p>\n<pre><code class=\"scss language-scss\">$space-stack-xxs: 0 0 $space-xxs 0;\n$space-stack-xs: 0 0 $space-xs 0;\n$space-stack-s: 0 0 $space-s 0;\n$space-stack-m: 0 0 $space-m 0;\n$space-stack-l: 0 0 $space-l 0;\n$space-stack-xl: 0 0 $space-xl 0;\n$space-stack-xxl: 0 0 $space-xxl 0;\n</code></pre>\n<p></br></br></p>\n<h2 id=\"spaceinline\">Space Inline</h2>\n<p></br></br></p>\n<pre><code class=\"scss language-scss\">$space-inline-xxs: 0 $space-xxs 0 0;\n$space-inline-xs: 0 $space-xs 0 0;\n$space-inline-s: 0 $space-s 0 0;\n$space-inline-m: 0 $space-m 0 0;\n$space-inline-l: 0 $space-l 0 0;\n$space-inline-xl: 0 $space-xl 0 0;\n$space-inline-xxl: 0 $space-xxl 0 0;\n</code></pre>\n<p></br></br></p>",
        "headings": ["Space Fundamentals", "Inset", "Inset Squish", "Inset Stretch", "Space  Stack", "Space Inline"]
    }, {
        "name": "colors",
        "category": "general",
        "title": "Colors",
        "html": "<p><label>Green</label></p>\n<ul class=\"color-list\">\n    <li style=\"background-color: #C9FFD1\"><span class=\"text\">$snowy-mint: #C9FFD1</span></li>\n    <li style=\"background-color: #A0EBA6\"><span class=\"text\">$madang: #A0EBA6</span></li>\n    <li style=\"background-color: #1EB234\"><span class=\"text\">$forest-green: #1EB234</span></li>\n    <li style=\"background-color: #188F2A\"><span class=\"text\">$kohpayam: #188F2A</span></li>\n</ul>\n<p><label>Red</label></p>\n<ul class=\"color-list\">\n    <li style=\"background-color: #FFDDDB\"><span class=\"text\">$pippin: #FFDDDB</span></li>\n    <li style=\"background-color: #FA9585\"><span class=\"text\">$geraldine: #FA9585</span></li>\n    <li style=\"background-color: #F44F41\"><span class=\"text\">$flamingo: #F44F41</span></li>\n    <li style=\"background-color: #C74236\"><span class=\"text\">$mojo: #C74236</span></li>\n</ul>\n<p><label>Orange</label></p>\n<ul class=\"color-list\">\n    <li style=\"background-color: #FFF6C4\"><span class=\"text\">$egg-white: #FFF6C4</span></li>\n    <li style=\"background-color: #FFD77E\"><span class=\"text\">$grandis: #FFD77E</span></li>\n    <li style=\"background-color: #FF9C0F\"><span class=\"text\">$west-side: #FF9C0F</span></li>\n    <li style=\"background-color: #FF6900\"><span class=\"text\">$zalando-orange: #FF6900</span></li>\n    <li style=\"background-color: #D24400\"><span class=\"text\">$tiger: #D24400</span></li>\n    <li style=\"background-color: #B63800\"><span class=\"text\">$rust: #B63800</span></li>\n</ul>\n<p><label>Blue</label></p>\n<ul class=\"color-list\">\n    <li style=\"background-color: #DEF5FE\"><span class=\"text\">$arctica: #DEF5FE</span></li>\n    <li style=\"background-color: #B0D6FB\"><span class=\"text\">$sail: #B0D6FB</span></li>\n    <li style=\"background-color: #00ABF2\"><span class=\"text\">$heaven: #00ABF2</span></li>\n    <li style=\"background-color: #008DC9\"><span class=\"text\">$liverleaf: #008DC9</span></li>\n    <li style=\"background-color: #007DB3\"><span class=\"text\">$deep-blue: #007DB3</span></li>\n    <li style=\"background-color: #006B99\"><span class=\"text\">$bahama-blue: #006B99</span></li>\n</ul>\n<p><label>Grey-Blue</label></p>\n<ul class=\"color-list\">\n    <li style=\"background-color: #EAF0FD\"><span class=\"text\">$selago: #EAF0FD</span></li>\n    <li style=\"background-color: #BACAEB\"><span class=\"text\">$spindle: #BACAEB</span></li>\n    <li style=\"background-color: #8B9CC4\"><span class=\"text\">$polo-blue: #8B9CC4</span></li>\n    <li style=\"background-color: #7687AB\"><span class=\"text\">$wild-blue: #7687AB</span></li>\n    <li style=\"background-color: #5D6B88\"><span class=\"text\">$lynch: #5D6B88</span></li>\n    <li style=\"background-color: #4A556C\"><span class=\"text\">$fjord: #4A556C</span></li>\n</ul>\n<p><label>Warm-Blue</label></p>\n<ul class=\"color-list\">\n    <li style=\"background-color: #E5E6FF\"><span class=\"text\">$titan-white: #E5E6FF</span></li>\n    <li style=\"background-color: #B2B5F8\"><span class=\"text\">$perfume: #B2B5F8</span></li>\n    <li style=\"background-color: #5F66DE\"><span class=\"text\">$burgundy-glow: #5F66DE</span></li>\n    <li style=\"background-color: #5156CC\"><span class=\"text\">$azure: #5156CC</span></li>\n    <li style=\"background-color: #4549AE\"><span class=\"text\">$royal-blue: #4549AE</span></li>\n    <li style=\"background-color: #3A3D91\"><span class=\"text\">$persian-blue: #3A3D91</span></li>\n</ul>\n<p><label>Jeans</label></p>\n<ul class=\"color-list\">\n    <li style=\"background-color: #E8EAFF\"><span class=\"text\">$porcelain: #E8EAFF</span></li>\n    <li style=\"background-color: #B4B9ED\"><span class=\"text\">$bilboa-flower: #B4B9ED</span></li>\n    <li style=\"background-color: #5C63AE\"><span class=\"text\">$iris: #5C63AE</span></li>\n    <li style=\"background-color: #464B8C\"><span class=\"text\">$admiral: #464B8C</span></li>\n    <li style=\"background-color: #3A3C75\"><span class=\"text\">$indigo: #3A3C75</span></li>\n    <li style=\"background-color: #2E3153\"><span class=\"text\">$midnight: #2E3153</span></li>\n</ul>\n<p><label>Plant-Green</label></p>\n<ul class=\"color-list\">\n    <li style=\"background-color: #F1FFDF\"><span class=\"text\">$lichen: #F1FFDF</span></li>\n    <li style=\"background-color: #C1DCA1\"><span class=\"text\">$moose: #C1DCA1</span></li>\n    <li style=\"background-color: #7DAB44\"><span class=\"text\">$amsterdam: #7DAB44</span></li>\n    <li style=\"background-color: #69943B\"><span class=\"text\">$shemrock: #69943B</span></li>\n    <li style=\"background-color: #577F33\"><span class=\"text\">$avocado: #577F33</span></li>\n    <li style=\"background-color: #3F5E2F\"><span class=\"text\">$pine: #3F5E2F</span></li>\n</ul>\n<p><label>Animal-Green</label></p>\n<ul class=\"color-list\">\n    <li style=\"background-color: #E1FFF0\"><span class=\"text\">$tokey: #E1FFF0</span></li>\n    <li style=\"background-color: #95CCB0\"><span class=\"text\">$camelion: #95CCB0</span></li>\n    <li style=\"background-color: #149253\"><span class=\"text\">$frog: #149253</span></li>\n    <li style=\"background-color: #12854D\"><span class=\"text\">$viper: #12854D</span></li>\n    <li style=\"background-color: #107846\"><span class=\"text\">$turtle: #107846</span></li>\n    <li style=\"background-color: #0F6B3E\"><span class=\"text\">$crocodile: #0F6B3E</span></li>\n</ul>\n<p><label>Water-Blue</label></p>\n<ul class=\"color-list\">\n    <li style=\"background-color: #DDF9FF\"><span class=\"text\">$mountain-spring: #DDF9FF</span></li>\n    <li style=\"background-color: #A1D2E8\"><span class=\"text\">$creek: #A1D2E8</span></li>\n    <li style=\"background-color: #57A2B5\"><span class=\"text\">$river: #57A2B5</span></li>\n    <li style=\"background-color: #3E8799\"><span class=\"text\">$lake: #3E8799</span></li>\n    <li style=\"background-color: #2A737F\"><span class=\"text\">$sea: #2A737F</span></li>\n    <li style=\"background-color: #1B6370\"><span class=\"text\">$ocean: #1B6370</span></li>\n</ul>\n<p><label>Petrol</label></p>\n<ul class=\"color-list\">\n    <li style=\"background-color: #E7FFFD\"><span class=\"text\">$clear-day: #E7FFFD</span></li>\n    <li style=\"background-color: #A0D4CF\"><span class=\"text\">$sinbad: #A0D4CF</span></li>\n    <li style=\"background-color: #1F7D74\"><span class=\"text\">$smaragd: #1F7D74</span></li>\n    <li style=\"background-color: #1A6B62\"><span class=\"text\">$aruba: #1A6B62</span></li>\n    <li style=\"background-color: #175C52\"><span class=\"text\">$cadet: #175C52</span></li>\n    <li style=\"background-color: #034338\"><span class=\"text\">$chrysocolla: #034338</span></li>\n</ul>\n<p><label>Violet</label></p>\n<ul class=\"color-list\">\n    <li style=\"background-color: #FAEAFF\"><span class=\"text\">$white-pionter: #FAEAFF</span></li>\n    <li style=\"background-color: #DABAE6\"><span class=\"text\">$prelude: #DABAE6</span></li>\n    <li style=\"background-color: #A14EBF\"><span class=\"text\">$verbena: #A14EBF</span></li>\n    <li style=\"background-color: #8B42A6\"><span class=\"text\">$orchid: #8B42A6</span></li>\n    <li style=\"background-color: #6D3B94\"><span class=\"text\">$violet: #6D3B94</span></li>\n    <li style=\"background-color: #4A2C74\"><span class=\"text\">$plum: #4A2C74</span></li>\n</ul>\n<p><label>Purple</label></p>\n<ul class=\"color-list\">\n    <li style=\"background-color: #ECE3FF\"><span class=\"text\">$blue-chalk: #ECE3FF</span></li>\n    <li style=\"background-color: #BFAFE6\"><span class=\"text\">$light-wisteria: #BFAFE6</span></li>\n    <li style=\"background-color: #7258B0\"><span class=\"text\">$purple: #7258B0</span></li>\n    <li style=\"background-color: #5E4595\"><span class=\"text\">$dark-lavender: #5E4595</span></li>\n    <li style=\"background-color: #4A3482\"><span class=\"text\">$royal-purple: #4A3482</span></li>\n    <li style=\"background-color: #2D1E66\"><span class=\"text\">$dark-purple: #2D1E66</span></li>\n</ul>\n<p><label>Berry</label></p>\n<ul class=\"color-list\">\n    <li style=\"background-color: #FFE5EE\"><span class=\"text\">$lavender-bush: #FFE5EE</span></li>\n    <li style=\"background-color: #CF95A8\"><span class=\"text\">$viola: #CF95A8</span></li>\n    <li style=\"background-color: #B82456\"><span class=\"text\">$currant: #B82456</span></li>\n    <li style=\"background-color: #9D1F49\"><span class=\"text\">$strawberry: #9D1F49</span></li>\n    <li style=\"background-color: #891B40\"><span class=\"text\">$raspberry: #891B40</span></li>\n    <li style=\"background-color: #6D1534\"><span class=\"text\">$brambleberry: #6D1534</span></li>\n</ul>\n<p><label>Light gray</label></p>\n<ul class=\"color-list\">\n    <li style=\"background-color: #FFFFFF\"><span class=\"text\">$white: #FFFFFF</span></li>\n    <li style=\"background-color: #FAFBFC\"><span class=\"text\">$athens-gray: #FAFBFC</span></li>\n    <li style=\"background-color: #F5F6F9\"><span class=\"text\">$catkin: #F5F6F9</span></li>\n    <li style=\"background-color: #F0F1F6\"><span class=\"text\">$silver: #F0F1F6</span></li>\n    <li style=\"background-color: #E9EAEF\"><span class=\"text\">$earl-gray: #E9EAEF</span></li>\n    <li style=\"background-color: #E1E2E8\"><span class=\"text\">$mischka: #E1E2E8</span></li>\n</ul>\n<p><label>Gray</label></p>\n<ul class=\"color-list\">\n    <li style=\"background-color: #D5D7DE\"><span class=\"text\">$miroschka: #D5D7DE</span></li>\n    <li style=\"background-color: #CBCDD5\"><span class=\"text\">$ghost: #CBCDD5</span></li>\n    <li style=\"background-color: #BDBFC7\"><span class=\"text\">$french-gray: #BDBFC7</span></li>\n    <li style=\"background-color: #ACADB5\"><span class=\"text\">$bombay: #ACADB5</span></li>\n    <li style=\"background-color: #9B9BA3\"><span class=\"text\">$santas-gray: #9B9BA3</span></li>\n    <li style=\"background-color: #8B8A91\"><span class=\"text\">$jumbo: #8B8A91</span></li>\n</ul>\n<p><label>Dark gray</label></p>\n<ul class=\"color-list\">\n    <li style=\"background-color: #7a7980\"><span class=\"text\">$heron: #7a7980</span></li>\n    <li style=\"background-color: #626166\"><span class=\"text\">$asphalt: #626166</span></li>\n    <li style=\"background-color: #454547\"><span class=\"text\">$abbey: #454547</span></li>\n    <li style=\"background-color: #272829\"><span class=\"text\">$shark: #272829</span></li>\n    <li style=\"background-color: #000000\"><span class=\"text\">$black: #000000</span></li>\n</ul>\n<p></br></br></br></p>",
        "headings": []
    }, {
        "name": "pagination",
        "category": "molecules",
        "title": "Pagination",
        "html": "<p>We have also default pagination:\nFunctions like <code>navigate()</code> need to move user to correct page.\nYou also can disable working arrows by changing the <code>disabled</code> property of buttons:\nThis example of aurelia disable buttons if you are on first page or on last page:</p>\n<pre><code class=\"html language-html\">    &lt;button class=\"mod-flat\" disabled.bind=\"page &lt; 1\" onclick=\"navigate(-1)\"&gt;&amp;lsaquo;&lt;/button&gt;\n    &lt;button class=\"mod-flat\" disabled.bind=\"page &gt;= total / size - 1\" onclick=\"navigate(1)\"&gt;&amp;rsaquo;&lt;/button&gt;\n</code></pre>\n<p></br></br></p>\n<div class=\"pagination\">\n    <button class=\"mod-flat\" onclick=\"navigate(-1)\">&lsaquo;</button>\n    <span class=\"current\">1-5</span>\n    <span class=\"separator\">of</span>\n    <span class=\"total\">20</span>\n    <button class=\"mod-flat\" onclick=\"navigate(1)\">&rsaquo;</button>\n</div>\n<pre><code class=\"html language-html\">&lt;div class=\"pagination\"&gt;\n    &lt;button class=\"mod-flat\" onclick=\"navigate(-1)\"&gt;&amp;lsaquo;&lt;/button&gt;\n    &lt;span class=\"current\"&gt;1-5&lt;/span&gt;\n    &lt;span class=\"separator\"&gt;of&lt;/span&gt;\n    &lt;span class=\"total\"&gt;20&lt;/span&gt;\n    &lt;button class=\"mod-flat\" onclick=\"navigate(1)\"&gt;&amp;rsaquo;&lt;/button&gt;\n&lt;/div&gt;\n</code></pre>\n<p></br></br></br></p>",
        "headings": []
    }, {
        "name": "tables",
        "category": "molecules",
        "title": "Tables",
        "html": "<h2 id=\"defaulttable\">Default Table</h2>\n<p>Default table provides an alternating row background color to increase usability for wide tables.\nRows also have a hover effect to indicate click interactions.\nLimit the number of rows to 10 and use pagination to view further data.\nExcept it is nessecary to have an overview about a larger amounts of data,\nthen its allowed to use a fixed table header with scrollable body.\n</br></br></p>\n<table>\n    <thead>\n        <tr>\n            <th>\n                <label>Name</label>\n            </th>\n            <th>\n                <label>Type</label>\n            </th>\n            <th>\n                <label>Owner</label>\n            </th>\n            <th>\n                <label>Team</label>\n            </th>\n            <th>\n                <label>Price</label>\n            </th>\n        </tr>\n    </thead>\n    <tbody>\n        <tr>\n            <td>Topic name 10</td>\n            <td>Bug</td>\n            <td>Selina Kyle</td>\n            <td>Tooling</td>\n            <td>4.500,00</td>\n        </tr>\n        <tr>\n            <td>Topic name 9</td>\n            <td>Refactoring</td>\n            <td>Pamela Isley</td>\n            <td>Tooling</td>\n            <td>3.239,00</td>\n        </tr>\n        <tr>\n            <td>Topic name 8</td>\n            <td>Work package</td>\n            <td>Solomon Grundy</td>\n            <td>Tooling</td>\n            <td>46,80</td>\n        </tr>\n        <tr>\n            <td>Topic name 7</td>\n            <td>Improvement</td>\n            <td>Betty Kane</td>\n            <td>Tooling</td>\n            <td>123,00</td>\n        </tr>\n        <tr>\n            <td>Topic name 6</td>\n            <td>Project</td>\n            <td>Bruce Banner</td>\n            <td>Tooling</td>\n            <td>10.899,00</td>\n        </tr>\n        <tr>\n            <td>Topic name 5</td>\n            <td>Big feature</td>\n            <td>Ras Al Ghul</td>\n            <td>Tooling</td>\n            <td>567,00</td>\n        </tr>\n        <tr>\n            <td>Topic name 4</td>\n            <td>Milestone</td>\n            <td>Bruce Wayne</td>\n            <td>Tooling</td>\n            <td>23,50</td>\n        </tr>\n        <tr>\n            <td>Topic name 3</td>\n            <td>A/B Test</td>\n            <td>Steven Rogers</td>\n            <td>Tooling</td>\n            <td>890,00</td>\n        </tr>\n        <tr>\n            <td>Topic name 2</td>\n            <td>Feature</td>\n            <td>Curtis Newton</td>\n            <td>Tooling</td>\n            <td>99,00</td>\n        </tr>\n        <tr>\n            <td>Topic name 1</td>\n            <td>Improvement</td>\n            <td>Edward Nygma</td>\n            <td>Tooling</td>\n            <td>12.500,00</td>\n        </tr>\n        <tr class=\"pagination-row\">\n            <td colspan=\"5\">\n                <div class=\"pagination\">\n                    <span class=\"current\">1-10</span>\n                    <span class=\"separator\">of</span>\n                    <span class=\"total\">23</span>\n                    <a href=\"#\">\n                        <span class=\"icon-left icon16\"></span>\n                    </a>\n                    <a href=\"#\">\n                        <span class=\"icon-right icon16\"></span>\n                    </a>\n                </div>\n            </td>\n        </tr>\n    </tbody>\n</table>\n<p></br></br></p>\n<pre><code class=\"html language-html\">&lt;table&gt;\n    &lt;thead&gt;\n        &lt;tr&gt;\n            &lt;th&gt;\n                &lt;label&gt;Name&lt;/label&gt;\n            &lt;/th&gt;\n            &lt;th&gt;\n                &lt;label&gt;Type&lt;/label&gt;\n            &lt;/th&gt;\n            &lt;th&gt;\n                &lt;label&gt;Owner&lt;/label&gt;\n            &lt;/th&gt;\n            &lt;th&gt;\n                &lt;label&gt;Team&lt;/label&gt;\n            &lt;/th&gt;\n            &lt;th&gt;\n                &lt;label&gt;Price&lt;/label&gt;\n            &lt;/th&gt;\n        &lt;/tr&gt;\n    &lt;/thead&gt;\n    &lt;tbody&gt;\n        &lt;tr&gt;\n            &lt;td&gt;Topic name 10&lt;/td&gt;\n            &lt;td&gt;Bug&lt;/td&gt;\n            &lt;td&gt;Selina Kyle&lt;/td&gt;\n            &lt;td&gt;Tooling&lt;/td&gt;\n            &lt;td&gt;4.500,00&lt;/td&gt;\n        &lt;/tr&gt;\n        &lt;tr&gt;\n            &lt;td&gt;Topic name 9&lt;/td&gt;\n            &lt;td&gt;Refactoring&lt;/td&gt;\n            &lt;td&gt;Pamela Isley&lt;/td&gt;\n            &lt;td&gt;Tooling&lt;/td&gt;\n            &lt;td&gt;3.239,00&lt;/td&gt;\n        &lt;/tr&gt;\n        &lt;tr class=\"pagination-row\"&gt;\n            &lt;td colspan=\"5\"&gt;\n                &lt;div class=\"pagination\"&gt;\n                    &lt;span class=\"current\"&gt;1-10&lt;/span&gt;\n                    &lt;span class=\"separator\"&gt;of&lt;/span&gt;\n                    &lt;span class=\"total\"&gt;23&lt;/span&gt;\n                    &lt;a href=\"#\"&gt;\n                        &lt;span class=\"icon-left icon16\"&gt;&lt;/span&gt;\n                    &lt;/a&gt;\n                    &lt;a href=\"#\"&gt;\n                        &lt;span class=\"icon-right icon16\"&gt;&lt;/span&gt;\n                    &lt;/a&gt;\n                &lt;/div&gt;\n            &lt;/td&gt;\n        &lt;/tr&gt;\n    &lt;/tbody&gt;\n&lt;/table&gt;\n</code></pre>\n<p></br></br></br></br></p>",
        "headings": ["Default Table"]
    }, {
        "name": "ws-date-picker",
        "category": "api",
        "title": "ws-date-picker",
        "html": "<h2 id=\"wsdatepicker\">WSDatePicker</h2>\n<p></br></br>\n<strong>Extends Component</strong>\n</br></br>\nRenders a date picker component which is based on flatpickr.\nTo specify a date format call the setFormat function with the corresponding format.\nPls have a look at the flatpickr formatting rules.\nYou can set additional options to the flatpickr by passing the options property.\nIf you only want to display an icon instead of a input set prop iconOnly.\n</br></br>\n<strong>Parameters</strong>\n</br></br></p>\n<ul>\n<li><code>props</code><br />\n</br></br></li>\n</ul>\n<h3 id=\"constructor-NaN\">constructor</h3>\n<p></br></br>\n<strong>Parameters</strong>\n</br></br></p>\n<ul>\n<li><code>props</code> <strong><a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object\">Object</a></strong> React properties\n</br></br></li>\n</ul>\n<h3 id=\"componentdidmount\">componentDidMount</h3>\n<p></br></br>\nInitialize the flatpickr with given options and prevent default change event\n</br></br>\nReturns <strong>void</strong> \n</br></br></p>\n<h3 id=\"componentwillreceiveprops\">componentWillReceiveProps</h3>\n<p></br></br>\nUpdate flatpickr when prop's changed\n</br></br>\n<strong>Parameters</strong>\n</br></br></p>\n<ul>\n<li><code>props</code> <strong><a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object\">Object</a></strong> React props\n</br></br>\nReturns <strong>void</strong> \n</br></br></li>\n</ul>\n<h3 id=\"componentwillunmount\">componentWillUnmount</h3>\n<p></br></br>\nDestroy the flatpickr and all events and bindings\n</br></br>\nReturns <strong>void</strong> \n</br></br></p>\n<h3 id=\"onchange\">onChange</h3>\n<p></br></br>\nHandle date selections and propagate the value via an custom change event and onChange callback\n</br></br>\n<strong>Parameters</strong>\n</br></br></p>\n<ul>\n<li><code>selectedDate</code> <strong><a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date\">Date</a></strong> The currently selected date<ul>\n<li><code>selectedDate.0</code>  </li></ul></li>\n<li><code>value</code> <strong><a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String\">String</a></strong> The date as string using the in props specified formatting\n</br></br>\nReturns <strong>void</strong> \n</br></br></li>\n</ul>\n<h3 id=\"render\">render</h3>\n<p></br></br>\nRender the component\n</br></br>\nReturns <strong><a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object\">Object</a></strong> \n</br></br></p>\n<h3 id=\"setformat\">setFormat</h3>\n<p></br></br>\nSet the format for all date picker instances\n</br></br>\n<strong>Parameters</strong>\n</br></br></p>\n<ul>\n<li><code>format</code> <strong><a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String\">string</a></strong> Format following flatpickr options\n</br></br>\nReturns <strong>void</strong> \n</br></br></br></li>\n</ul>",
        "headings": ["WSDatePicker"]
    }, {
        "name": "ws-dropdown",
        "category": "api",
        "title": "ws-dropdown",
        "html": "<h2 id=\"dropdowninput\">DropdownInput</h2>\n<p></br></br>\n<strong>Extends Component</strong>\n</br></br>\nRenders renders a text input inside a dropdown container to provide a free text dropdown component.\nPossible options are value and placeholder which are both strings.\n</br></br>\n<strong>Parameters</strong>\n</br></br></p>\n<ul>\n<li><code>props</code><br />\n</br></br>\n<strong>Properties</strong>\n</br></br></li>\n<li><code>props</code> <strong><a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object\">Object</a></strong> React properties object<ul>\n<li><code>props.value</code> <strong><a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String\">string</a></strong> Value of text input</li>\n<li><code>props.placeholder</code> <strong><a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String\">string</a></strong> Placeholder for text inputs (Filter input or Input only version)</li>\n<li><code>props.handle</code> <strong><a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Statements/function\">Function</a></strong> Function used to propagate data\n</br></br></li></ul></li>\n</ul>\n<h3 id=\"constructor-NaN\">constructor</h3>\n<p></br></br>\n<strong>Parameters</strong>\n</br></br></p>\n<ul>\n<li><code>props</code> <strong><a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object\">Object</a></strong> React props\n</br></br></li>\n</ul>\n<h3 id=\"componentdidmount\">componentDidMount</h3>\n<p></br></br>\nPrevent default change event to bubble up\n</br></br>\nReturns <strong>void</strong> \n</br></br></p>\n<h3 id=\"componentwillunmount\">componentWillUnmount</h3>\n<p></br></br>\nPrevent default change event to bubble up\n</br></br>\nReturns <strong>void</strong> \n</br></br></p>\n<h3 id=\"onkeydown\">onKeyDown</h3>\n<p></br></br>\nCall submit on enter key\n</br></br>\n<strong>Parameters</strong>\n</br></br></p>\n<ul>\n<li><code>event</code> <strong><a href=\"https://developer.mozilla.org/en-US/docs/Web/API/KeyboardEvent\">KeyboardEvent</a></strong> JavaScript Event object\n</br></br>\nReturns <strong><a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Boolean\">Boolean</a></strong> \n</br></br></li>\n</ul>\n<h3 id=\"onchange\">onChange</h3>\n<p></br></br>\nSet input value to state\n</br></br>\n<strong>Parameters</strong>\n</br></br></p>\n<ul>\n<li><code>event</code> <strong><a href=\"https://developer.mozilla.org/en-US/docs/Web/API/KeyboardEvent\">KeyboardEvent</a></strong> JavaScript event object\n</br></br>\nReturns <strong>void</strong> \n</br></br></li>\n</ul>\n<h3 id=\"onsubmit\">onSubmit</h3>\n<p></br></br>\nCalled when enter or submit key is pressed\n</br></br>\nReturns <strong>void</strong> \n</br></br></p>\n<h3 id=\"getheight\">getHeight</h3>\n<p></br></br>\nGets the height of the menu container to scale the outer container up\n</br></br>\nReturns <strong><a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number\">Number</a></strong> \n</br></br></p>\n<h3 id=\"render\">render</h3>\n<p></br></br>\nReturns <strong><a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object\">Object</a></strong> \n</br></br></p>\n<h3 id=\"defaultprops\">defaultProps</h3>\n<p></br></br></p>\n<h3 id=\"proptypes\">propTypes</h3>\n<h2 id=\"dropdownmenuitem\">DropdownMenuItem</h2>\n<p></br></br>\n<strong>Extends Component</strong>\n</br></br>\nThis class renders a list item inside a dropdown menu. Since the wrapper menu is missing this class is pretty\nuseless as standalone. It also renders child menu's if the passed item has children.\nThe item object can have the following properties\n{\n    label: String,\n    href: String, // Fully qualified URI\n    icon: String, // The icon of an item must be a css class name\n    children: Array<Item>,\n    selected: Boolean, // Adds the class .is-active to the .dropdown-item\n    focused: Boolean, // Adds the class .is-focused to the .dropdown-item\n    disabled: Boolean // Adds thr class .is-disabled to the .dropdown-item\n}\n</br></br>\n<strong>Parameters</strong>\n</br></br></p>\n<ul>\n<li><code>props</code>  </li>\n<li><code>context</code><br />\n</br></br>\n<strong>Properties</strong>\n</br></br></li>\n<li><code>props</code> <strong><a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object\">Object</a></strong> React properties object<ul>\n<li><code>props.item</code> <strong><a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object\">Object</a></strong> Dropdown item configuration</li>\n<li><code>props.icon</code> <strong><a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String\">string</a></strong> Class name of icon in trigger</li>\n<li><code>props.isParent</code> <strong><a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Boolean\">Boolean</a></strong> Flag to identify if this item renders the parent dropdown item</li>\n<li><code>props.handle</code> <strong><a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Statements/function\">Function</a></strong> Function used to propagate data\n</br></br></li></ul></li>\n</ul>\n<h3 id=\"constructor\">constructor</h3>\n<p></br></br>\n<strong>Parameters</strong>\n</br></br></p>\n<ul>\n<li><code>props</code> <strong><a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object\">Object</a></strong> React props</li>\n<li><code>context</code> <strong><a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object\">Object</a></strong> React context\n</br></br></li>\n</ul>\n<h3 id=\"componentwillreceiveprops\">componentWillReceiveProps</h3>\n<p></br></br>\nImportant to update the state when the items in menu changed.\nWhen in the multi select a dropdown item is selected and stored (submitted) it will be filtered out\nof the item list and shown in a separate value list. React doesn't created new components but reuses them.\nThis leads to property updates and without this function a wrong item will be rendered.\n</br></br>\n<strong>Parameters</strong>\n</br></br></p>\n<ul>\n<li><code>props</code> <strong><a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object\">Object</a></strong> React component props\n</br></br>\nReturns <strong>void</strong> \n</br></br></li>\n</ul>\n<h3 id=\"onclick\">onClick</h3>\n<p></br></br>\nHandle clicks on this dropdown item. This can trigger a back navigation, selecting the item on multi selects\nor change the dropdown value for simple dropdown's\n</br></br>\n<strong>Parameters</strong>\n</br></br></p>\n<ul>\n<li><code>event</code> <strong><a href=\"https://developer.mozilla.org/en-US/docs/Web/API/MouseEvent\">MouseEvent</a></strong> JavaScript event object\n</br></br>\nReturns <strong>void</strong> \n</br></br></li>\n</ul>\n<h3 id=\"handlepropagation\">handlePropagation</h3>\n<p></br></br>\nThis is required to propagate changes from child menu to parent menu.\nFor instance if the menu size, it's value changed or the parent or child menu should be shown.\n</br></br>\n<strong>Parameters</strong>\n</br></br></p>\n<ul>\n<li><code>type</code> <strong><a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String\">String</a></strong> Type of propagated data</li>\n<li><code>data</code> <strong>any</strong> Data which was propagated. Can be height of child menu or reference of child\n</br></br>\nReturns <strong>void</strong> \n</br></br></li>\n</ul>\n<h3 id=\"render-1\">render</h3>\n<p></br></br>\nRenders the dropdown item\n</br></br>\nReturns <strong><a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object\">Object</a></strong> \n</br></br></p>\n<h3 id=\"defaultprops-1\">defaultProps</h3>\n<p></br></br></p>\n<h3 id=\"proptypes-1\">propTypes</h3>\n<p></br></br></p>\n<h3 id=\"contexttypes\">contextTypes</h3>\n<h2 id=\"dropdownmenu\">DropdownMenu</h2>\n<p></br></br>\n<strong>Extends Component</strong>\n</br></br>\nThis class renders the menu inside a dropdown container. Since the wrapper WSDropdown is missing, which provides\nadditional wrapping markup and functionality, you SHOULD NOT use this component as standalone.\n</br></br>\n<strong>Parameters</strong>\n</br></br></p>\n<ul>\n<li><code>props</code>  </li>\n<li><code>context</code><br />\n</br></br>\n<strong>Properties</strong>\n</br></br></li>\n<li><code>props</code> <strong><a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object\">Object</a></strong> React properties object<ul>\n<li><code>props.parent</code> <strong><a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object\">Object</a></strong> Parent dropdown item. Only set if this is a child menu</li>\n<li><code>props.items</code> <strong><a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array\">Array</a>&lt;<a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object\">Object</a>></strong> List of dropdown item configs. Each item can contain label, value, disabled, selected</li>\n<li><code>props.value</code> <strong>(<a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object\">Object</a> | <a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array\">Array</a>&lt;<a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object\">Object</a>>)</strong> Selected dropdown item(s)</li>\n<li><code>props.filterable</code> <strong><a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Boolean\">Boolean</a></strong> Flag if the dropdown menu is filterable</li>\n<li><code>props.filter</code> <strong><a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String\">string</a></strong> Default filter value</li>\n<li><code>props.limit</code> <strong><a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number\">number</a></strong> Limit visible dropdown items. Use together with filterable flag.</li>\n<li><code>props.placeholder</code> <strong><a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String\">string</a></strong> Placeholder for text inputs (Filter input or Input only version)</li>\n<li><code>props.handle</code> <strong><a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Statements/function\">Function</a></strong> Function used to propagate data\n</br></br></li></ul></li>\n</ul>\n<h3 id=\"constructor-1\">constructor</h3>\n<p></br></br>\n<strong>Parameters</strong>\n</br></br></p>\n<ul>\n<li><code>props</code> <strong><a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object\">Object</a></strong> React props</li>\n<li><code>context</code> <strong><a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object\">Object</a></strong> React context\n</br></br></li>\n</ul>\n<h3 id=\"componentdidmount-1\">componentDidMount</h3>\n<p></br></br>\nPrevent default change event to bubble up\n</br></br>\nReturns <strong>void</strong> \n</br></br></p>\n<h3 id=\"componentwillreceiveprops-1\">componentWillReceiveProps</h3>\n<p></br></br>\nHandle changes of passed properties\n</br></br>\n<strong>Parameters</strong>\n</br></br></p>\n<ul>\n<li><code>props</code> <strong><a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object\">Object</a></strong> React props\n</br></br>\nReturns <strong>void</strong> \n</br></br></li>\n</ul>\n<h3 id=\"componentdidupdate\">componentDidUpdate</h3>\n<p></br></br>\nSend the new height of this menu after update to the parent.\nThis will be called when updateFilter did set the new state\n</br></br>\nReturns <strong>void</strong> \n</br></br></p>\n<h3 id=\"componentwillunmount-1\">componentWillUnmount</h3>\n<p></br></br>\nPrevent default change event to bubble up\n</br></br>\nReturns <strong>void</strong> \n</br></br></p>\n<h3 id=\"getheight-1\">getHeight</h3>\n<p></br></br>\nGets the current height of the menu\n</br></br>\nReturns <strong><a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number\">Number</a></strong> \n</br></br></p>\n<h3 id=\"getfiltereditems\">getFilteredItems</h3>\n<p></br></br>\nIf there is a filter active it applies it on the available items\n</br></br>\nReturns <strong><a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array\">Array</a>&lt;<a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object\">Object</a>></strong> \n</br></br></p>\n<h3 id=\"updatefilter\">updateFilter</h3>\n<p></br></br>\nSetting the input value as filter\n</br></br>\n<strong>Parameters</strong>\n</br></br></p>\n<ul>\n<li><code>event</code> <strong><a href=\"https://developer.mozilla.org/en-US/docs/Web/API/KeyboardEvent\">KeyboardEvent</a></strong> JavaScript event object\n</br></br>\nReturns <strong>void</strong> \n</br></br></li>\n</ul>\n<h3 id=\"clearselections\">clearSelections</h3>\n<p></br></br>\nDeselect all items which are not stored as value. Only relevant for multi select dropdown.\nWhen the dropdown will be closed without pressing submit the state will be restored\n</br></br>\nReturns <strong>void</strong> \n</br></br></p>\n<h3 id=\"submit\">submit</h3>\n<p></br></br>\nHandles submit action on multi select drop downs\n</br></br>\n<strong>Parameters</strong>\n</br></br></p>\n<ul>\n<li><code>event</code> <strong><a href=\"https://developer.mozilla.org/en-US/docs/Web/API/Event\">Event</a></strong> JavaScript event object\n</br></br>\nReturns <strong>void</strong> \n</br></br></li>\n</ul>\n<h3 id=\"handlepropagation-1\">handlePropagation</h3>\n<p></br></br>\nHandles data propagation from child menus\nThis function uses arrow function to bind the scope to this instance\n</br></br>\n<strong>Parameters</strong>\n</br></br></p>\n<ul>\n<li><code>type</code> <strong><a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String\">String</a></strong> Should be just show-parent</li>\n<li><code>data</code> <strong>any</strong> Propagated data. Could be for instance a menu reference or the menu height.\n</br></br>\nReturns <strong>void</strong> \n</br></br></li>\n</ul>\n<h3 id=\"showchild\">showChild</h3>\n<p></br></br>\nShows the child menu and hides the current menu\n</br></br>\n<strong>Parameters</strong>\n</br></br></p>\n<ul>\n<li><code>subMenu</code> <strong>WSDropdownMenu</strong> The reference of the child menu to show\n</br></br>\nReturns <strong>void</strong> \n</br></br></li>\n</ul>\n<h3 id=\"showcurrent\">showCurrent</h3>\n<p></br></br>\nShows this menu and hides currently open sub menu\n</br></br>\nReturns <strong>void</strong> \n</br></br></p>\n<h3 id=\"animatein\">animateIn</h3>\n<p></br></br>\nAnimates a menu or sub menu into the view\n</br></br>\n<strong>Parameters</strong>\n</br></br></p>\n<ul>\n<li><code>goBack</code> <strong><a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Boolean\">Boolean</a></strong> True if a menu should be shown and a sub menu be hidden\n</br></br>\nReturns <strong>void</strong> \n</br></br></li>\n</ul>\n<h3 id=\"animateout\">animateOut</h3>\n<p></br></br>\nAnimates a menu or sub menu out of the view\n</br></br>\n<strong>Parameters</strong>\n</br></br></p>\n<ul>\n<li><code>goBack</code> <strong><a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Boolean\">Boolean</a></strong> True if a menu should be hidden and a sub menu be shown\n</br></br>\nReturns <strong>void</strong> \n</br></br></li>\n</ul>\n<h3 id=\"animateelement\">animateElement</h3>\n<p></br></br>\nAnimates an element by adding a class with an css animation and executes a callback when the animation ends\n</br></br>\n<strong>Parameters</strong>\n</br></br></p>\n<ul>\n<li><code>item</code> <strong><a href=\"https://developer.mozilla.org/en-US/docs/Web/API/Element\">Element</a></strong> The dom node to animate</li>\n<li><code>animationClass</code> <strong><a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String\">String</a></strong> The css class which holds the animation definition</li>\n<li><code>callback</code> <strong><a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Statements/function\">Function</a></strong> Callback which will be executed at the end of the animation\n</br></br>\nReturns <strong>void</strong> \n</br></br></li>\n</ul>\n<h3 id=\"render-2\">render</h3>\n<p></br></br>\nRenders the dropdown menu\n</br></br>\nReturns <strong><a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object\">Object</a></strong> \n</br></br></p>\n<h3 id=\"defaultprops-2\">defaultProps</h3>\n<p></br></br></p>\n<h3 id=\"proptypes-2\">propTypes</h3>\n<p></br></br></p>\n<h3 id=\"contexttypes-1\">contextTypes</h3>\n<h2 id=\"wsdropdown\">WSDropdown</h2>\n<p></br></br>\n<strong>Extends Component</strong>\n</br></br>\nThis class describes a Preact/React component which renders a dropdown.\nThe dropdown can be used as select, multi select, filterable select or as a simple menu.\nRegarding the flags the changed value will look different. The flag inputOnly results in a string,\nthe flag multiple results in an array and without those flags the change event details contain an object.\nAs trigger type you can choose between an anchor, button or a select like looking container.\n</br></br>\n<strong>Parameters</strong>\n</br></br></p>\n<ul>\n<li><code>props</code><br />\n</br></br>\n<strong>Properties</strong>\n</br></br></li>\n<li><code>props</code> <strong><a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object\">Object</a></strong> React properties object<ul>\n<li><code>props.type</code> <strong><a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String\">string</a></strong> Type of trigger. Can be anchor, button, select or icon</li>\n<li><code>props.text</code> <strong><a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String\">string</a></strong> Text of trigger</li>\n<li><code>props.icon</code> <strong><a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String\">string</a></strong> Class name of icon in trigger</li>\n<li><code>props.multiple</code> <strong><a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Boolean\">Boolean</a></strong> Flag if the dropdown is a multi select menu</li>\n<li><code>props.filterable</code> <strong><a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Boolean\">Boolean</a></strong> Flag if the dropdown menu is filterable</li>\n<li><code>props.inputOnly</code> <strong><a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Boolean\">Boolean</a></strong> Flag if the dropdown only contains a text input and a button</li>\n<li><code>props.filter</code> <strong><a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String\">string</a></strong> Default filter value</li>\n<li><code>props.limit</code> <strong><a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number\">number</a></strong> Limit visible dropdown items. Use together with filterable flag.</li>\n<li><code>props.orientation</code> <strong><a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String\">string</a></strong> Dropdown orientation. Can be either left or right</li>\n<li><code>props.placeholder</code> <strong><a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String\">string</a></strong> Placeholder for text inputs (Filter input or Input only version)</li>\n<li><code>props.onChange</code> <strong><a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String\">string</a></strong> Callback for react components to propagate value changes\n</br></br></li></ul></li>\n</ul>\n<h3 id=\"constructor-2\">constructor</h3>\n<p></br></br>\n<strong>Parameters</strong>\n</br></br></p>\n<ul>\n<li><code>props</code> <strong><a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object\">Object</a></strong> React props\n</br></br></li>\n</ul>\n<h3 id=\"getchildcontext\">getChildContext</h3>\n<p></br></br>\nCalled by React to get the types of the child context values\n</br></br>\nReturns <strong><a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object\">Object</a></strong> \n</br></br></p>\n<h3 id=\"componentdidmount-2\">componentDidMount</h3>\n<p></br></br>\nStart listening for clicks in window\n</br></br>\nReturns <strong>void</strong> \n</br></br></p>\n<h3 id=\"componentwillreceiveprops-2\">componentWillReceiveProps</h3>\n<p></br></br>\nHandle changes of passed properties\n</br></br>\n<strong>Parameters</strong>\n</br></br></p>\n<ul>\n<li><code>props</code> <strong><a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object\">Object</a></strong> React props\n</br></br>\nReturns <strong>void</strong> \n</br></br></li>\n</ul>\n<h3 id=\"componentwillunmount-2\">componentWillUnmount</h3>\n<p></br></br>\nStop listening for clicks in window\n</br></br>\nReturns <strong>void</strong> \n</br></br></p>\n<h3 id=\"ondocumentclick\">onDocumentClick</h3>\n<p></br></br>\nHandles click on document body to close the dropdown if clicked elsewhere\n</br></br>\n<strong>Parameters</strong>\n</br></br></p>\n<ul>\n<li><code>event</code> <strong><a href=\"https://developer.mozilla.org/en-US/docs/Web/API/MouseEvent\">MouseEvent</a></strong> JavaScript event object\n</br></br>\nReturns <strong>void</strong> \n</br></br></li>\n</ul>\n<h3 id=\"gettextfromvalue\">getTextFromValue</h3>\n<p></br></br>\nGet text from labels of selected items\n</br></br>\n<strong>Parameters</strong>\n</br></br></p>\n<ul>\n<li><code>value</code> <strong>(<a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String\">String</a> | <a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object\">Object</a> | <a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array\">Array</a>&lt;<a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object\">Object</a>>)</strong> Selected items\n</br></br>\nReturns <strong><a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String\">String</a></strong> \n</br></br></li>\n</ul>\n<h3 id=\"setvalue\">setValue</h3>\n<p></br></br>\nSet the value of the dropdown and update the display text if the trigger element is a select\n</br></br>\n<strong>Parameters</strong>\n</br></br></p>\n<ul>\n<li><code>value</code> <strong>(<a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object\">Object</a> | <a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array\">Array</a>&lt;<a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object\">Object</a>>)</strong> The new dropdown value\n</br></br>\nReturns <strong>void</strong> \n</br></br></li>\n</ul>\n<h3 id=\"createstate\">createState</h3>\n<p></br></br>\nCreate state object from properties\n</br></br>\n<strong>Parameters</strong>\n</br></br></p>\n<ul>\n<li><code>props</code> <strong><a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object\">Object</a></strong> React props\n</br></br>\nReturns <strong><a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object\">Object</a></strong> \n</br></br></li>\n</ul>\n<h3 id=\"handlepropagation-2\">handlePropagation</h3>\n<p></br></br>\nHandles data propagation from child elements\n</br></br>\n<strong>Parameters</strong>\n</br></br></p>\n<ul>\n<li><code>type</code> <strong><a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String\">String</a></strong> Either change for value changes or change-size which will be emitted on menu changes</li>\n<li><code>data</code> <strong>(<a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object\">Object</a> | <a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number\">Number</a>)</strong> Either new value or height of new menu\n</br></br>\nReturns <strong>void</strong> \n</br></br></li>\n</ul>\n<h3 id=\"enrichitems\">enrichItems</h3>\n<p></br></br>\nUsed to convert the items if they are strings into the required object structure\n</br></br>\n<strong>Parameters</strong>\n</br></br></p>\n<ul>\n<li><code>items</code> <strong><a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array\">Array</a>&lt;(<a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String\">String</a> | <a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object\">Object</a>)></strong> List of items represented as string or object\n</br></br>\nReturns <strong><a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array\">Array</a>&lt;<a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object\">Object</a>></strong> \n</br></br></li>\n</ul>\n<h3 id=\"open\">open</h3>\n<p></br></br>\nOpens the dropdown\n</br></br>\nReturns <strong>void</strong> \n</br></br></p>\n<h3 id=\"close\">close</h3>\n<p></br></br>\nCloses the dropdown and clears the selection if needed\n</br></br>\nReturns <strong>void</strong> \n</br></br></p>\n<h3 id=\"adjustsize\">adjustSize</h3>\n<p></br></br>\nSet's the size on an element\n</br></br>\n<strong>Parameters</strong>\n</br></br></p>\n<ul>\n<li><code>newSize</code> <strong><a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number\">Number</a></strong> The new size of the active menu will become the new dropdown container size\n</br></br>\nReturns <strong>void</strong> \n</br></br></li>\n</ul>\n<h3 id=\"animateelement-1\">animateElement</h3>\n<p></br></br>\nAnimates an element by adding a class with an css animation and executes a callback when the animation ends\n</br></br>\n<strong>Parameters</strong>\n</br></br></p>\n<ul>\n<li><code>item</code> <strong><a href=\"https://developer.mozilla.org/en-US/docs/Web/API/Element\">Element</a></strong> The dom node to animate</li>\n<li><code>animationClass</code> <strong><a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String\">String</a></strong> The css class which holds the animation definition</li>\n<li><code>callback</code> <strong><a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Statements/function\">Function</a></strong> Callback which will be executed at the end of the animation\n</br></br>\nReturns <strong>void</strong> \n</br></br></li>\n</ul>\n<h3 id=\"rendertrigger\">renderTrigger</h3>\n<p></br></br>\nRenders the dropdown trigger element\n</br></br>\nReturns <strong><a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object\">Object</a></strong> \n</br></br></p>\n<h3 id=\"rendercontent\">renderContent</h3>\n<p></br></br>\nRender the content of the dropdown which can be a menu with only input and submit button\nor a common menu with list items\n</br></br>\nReturns <strong><a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object\">Object</a></strong> \n</br></br></p>\n<h3 id=\"render-3\">render</h3>\n<p></br></br>\nRender the complete dropdown\n</br></br>\nReturns <strong><a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object\">Object</a></strong> \n</br></br></p>\n<h3 id=\"defaultprops-3\">defaultProps</h3>\n<p></br></br></p>\n<h3 id=\"proptypes-3\">propTypes</h3>\n<p></br></br></p>\n<h3 id=\"childcontexttypes\">childContextTypes</h3>\n<p></br></br></br></p>",
        "headings": ["DropdownInput", "DropdownMenuItem", "DropdownMenu", "WSDropdown"]
    }, {
        "name": "ws-header",
        "category": "api",
        "title": "ws-header",
        "html": "<h2 id=\"wsheadernavlink\">WSHeaderNavLink</h2>\n<p></br></br>\nHelper component which is just rendering a single navigation link element\n</br></br>\n<strong>Parameters</strong>\n</br></br></p>\n<ul>\n<li><code>props</code> <strong><a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object\">object</a></strong> properties<ul>\n<li><code>props.key</code> <strong><a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String\">string</a></strong> key for the list item</li>\n<li><code>props.link</code> <strong><a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object\">object</a></strong> link to render<ul>\n<li><code>props.link.onclick</code> <strong><a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Statements/function\">function</a></strong> callback for clicks on the link</li>\n<li><code>props.link.label</code> <strong><a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String\">string</a></strong> label to show for the link\n</br></br>\nReturns <strong>JSX</strong> rendered template</li></ul></li></ul></li>\n</ul>\n<h2 id=\"wsheader\">WSHeader</h2>\n<p></br></br>\n<strong>Extends Component</strong>\n</br></br>\nThe default Header to be used everywhere\n</br></br>\n<strong>Properties</strong>\n</br></br></p>\n<ul>\n<li><code>props</code> <strong><a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object\">object</a></strong> properties<ul>\n<li><code>props.setLang</code> <strong><a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Statements/function\">function</a></strong> handler which sets language</li>\n<li><code>props.setLogin</code> <strong><a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Statements/function\">function</a></strong> handler which sets Login information (token and boolan for loggedin)</li>\n<li><code>props.clientId</code> <strong><a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number\">number</a></strong> clientId</li>\n<li><code>props.redirectUrl</code> <strong><a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String\">string</a></strong> URL to redirect after successfully login</li>\n<li><code>props.logoUrl</code> <strong><a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String\">string</a></strong> url for logo</li>\n<li><code>props.title</code> <strong><a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String\">string</a></strong> title of Header</li>\n<li><code>props.links</code> <strong><a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array\">array</a></strong> List of navigation links based on object format {label, onclick-Handler }\n</br></br></li></ul></li>\n</ul>\n<h3 id=\"constructor-NaN\">constructor</h3>\n<p></br></br>\nConstructor of WSHeader\nit is initializing default values for the state object\n</br></br></p>\n<h3 id=\"componentdidmount\">componentDidMount</h3>\n<p></br></br>\nLifecycle: componentDidMount handler for component\n</br></br>\nReturns <strong>void</strong> \n</br></br></p>\n<h3 id=\"getstatefromurl\">getStateFromUrl</h3>\n<p></br></br>\nMethod to extract state parameter from url\n</br></br>\n<strong>Parameters</strong>\n</br></br></p>\n<ul>\n<li><code>url</code> <strong><a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String\">String</a></strong> urlString to extract state parameter\n</br></br>\nReturns <strong><a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String\">String</a></strong> state information\n</br></br></li>\n</ul>\n<h3 id=\"gettoken\">getToken</h3>\n<p></br></br>\nMethod to get user auth token\n</br></br>\n<strong>Parameters</strong>\n</br></br></p>\n<ul>\n<li><code>orgUrl</code> <strong><a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String\">String</a></strong> url to receive Token\n</br></br>\nReturns <strong><a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String\">String</a></strong> token string\n</br></br></li>\n</ul>\n<h3 id=\"setcookie\">setCookie</h3>\n<p></br></br>\nSets cookie for a given token\n</br></br>\n<strong>Parameters</strong>\n</br></br></p>\n<ul>\n<li><code>token</code> <strong><a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String\">String</a></strong> Token String\n</br></br>\nReturns <strong>void</strong> \n</br></br></li>\n</ul>\n<h3 id=\"getlanguage\">getLanguage</h3>\n<p></br></br>\nget Language from state / localStorage\n</br></br>\n<strong>Parameters</strong>\n</br></br></p>\n<ul>\n<li><code>state</code> <strong><a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object\">object</a></strong> state object of component\n</br></br>\nReturns <strong><a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object\">object</a></strong> language object\n</br></br></li>\n</ul>\n<h3 id=\"setlanguage\">setLanguage</h3>\n<p></br></br>\nLanguage string to set navigation\n</br></br>\n<strong>Parameters</strong>\n</br></br></p>\n<ul>\n<li><code>lang</code> <strong><a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String\">String</a></strong> Language string\n</br></br>\nReturns <strong>void</strong> \n</br></br></li>\n</ul>\n<h3 id=\"removecookie\">removeCookie</h3>\n<p></br></br>\nRemoves cookie\n</br></br>\nReturns <strong>void</strong> \n</br></br></p>\n<h3 id=\"checkisloggedin\">checkIsLoggedIn</h3>\n<p></br></br>\nHelper method checking if the user is already logged in\n</br></br>\nReturns <strong>(<a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Boolean\">Boolean</a> | void)</strong> \n</br></br></p>\n<h3 id=\"propagateloginstatuschange\">propagateLoginStatusChange</h3>\n<p></br></br>\nUpdates changed login status\n</br></br>\n<strong>Parameters</strong>\n</br></br></p>\n<ul>\n<li><code>isLoggedIn</code> <strong><a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Boolean\">boolean</a></strong> updated status of logged in user</li>\n<li><code>token</code> <strong><a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String\">String</a></strong> Token String\n</br></br>\nReturns <strong>void</strong> \n</br></br></li>\n</ul>\n<h3 id=\"checksessionstate\">checkSessionState</h3>\n<p></br></br>\nHelper method checking current session state\n</br></br>\n<strong>Parameters</strong>\n</br></br></p>\n<ul>\n<li><code>state</code> <strong><a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String\">String</a></strong> String containing state\n</br></br>\nReturns <strong><a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Boolean\">Boolean</a></strong> valid boolean\n</br></br></li>\n</ul>\n<h3 id=\"login\">login</h3>\n<p></br></br>\nLogin\n</br></br>\nReturns <strong>void</strong> \n</br></br></p>\n<h3 id=\"logout\">logout</h3>\n<p></br></br>\nLogout\n</br></br>\nReturns <strong>void</strong> \n</br></br></p>\n<h3 id=\"render\">render</h3>\n<p></br></br>\nRender function of component\n</br></br>\nReturns <strong>JSX</strong> JSX string representation of WSHeader\n</br></br></p>\n<h3 id=\"proptypes\">propTypes</h3>\n<p></br></br></p>\n<h2 id=\"failurelistener\">failureListener</h2>\n<p></br></br>\nReact to failure in user authentication\n</br></br>\nReturns <strong>void</strong> \n</br></br></p>\n<h2 id=\"successlistener\">successListener</h2>\n<p></br></br>\nreact to success in user authentication\n</br></br>\nReturns <strong><a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Boolean\">boolean</a></strong> is the user logged in\n</br></br></p>\n<h2 id=\"userservicesuccess\">userServiceSuccess</h2>\n<p></br></br>\nreact to success in the user lookup\nset the local state with the looked up user name and email\n</br></br>\nReturns <strong>void</strong> \n</br></br></p>\n<h2 id=\"gettokenfromurl\">getTokenFromUrl</h2>\n<p></br></br>\ngetTokenFromUrl\n</br></br>\n<strong>Parameters</strong>\n</br></br></p>\n<ul>\n<li><code>url</code> <strong><a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String\">String</a></strong> url string\n</br></br>\nReturns <strong><a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String\">String</a></strong> token part\n</br></br></li>\n</ul>\n<h2 id=\"getcookievalue\">getCookieValue</h2>\n<p></br></br>\nGet Cookie Value\n</br></br>\n<strong>Parameters</strong>\n</br></br></p>\n<ul>\n<li><code>a</code> <strong><a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String\">String</a></strong> cookie key to match\n</br></br>\nReturns <strong><a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String\">String</a></strong> cookie value for key\n</br></br></li>\n</ul>\n<h2 id=\"guid\">guid</h2>\n<p></br></br>\nGenerate a global unique identifier\n</br></br>\nReturns <strong><a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String\">String</a></strong> string\n</br></br></p>\n<h2 id=\"s4\">s4</h2>\n<p></br></br>\nHelper method for calculating a unique Id\n</br></br>\nReturns <strong><a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String\">String</a></strong> \n</br></br></p>\n<h2 id=\"setsessionstate\">setSessionState</h2>\n<p></br></br>\nSets Session State\n</br></br>\nReturns <strong><a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String\">String</a></strong> encoded URI component of state\n</br></br></br></p>",
        "headings": ["WSHeaderNavLink", "WSHeader", "failureListener", "successListener", "userServiceSuccess", "getTokenFromUrl", "getCookieValue", "guid", "s4", "setSessionState"]
    }, {
        "name": "ws-inline-edit",
        "category": "api",
        "title": "ws-inline-edit",
        "html": "<h2 id=\"wsinlineedit\">WSInlineEdit</h2>\n<p></br></br>\n<strong>Extends Component</strong>\n</br></br>\nThis class describes a Preact/React component which renders a inline-edit element.\nThe inline-edit component can be used everywhere in block where you want to have ability to change value.\nAs an example you can use it in div blocks, rows, tables.\n</br></br>\n<strong>Parameters</strong>\n</br></br></p>\n<ul>\n<li><code>props</code><br />\n</br></br></li>\n</ul>\n<h3 id=\"constructor-NaN\">constructor</h3>\n<p></br></br>\n<strong>Parameters</strong>\n</br></br></p>\n<ul>\n<li><code>props</code> <strong><a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object\">Object</a></strong> Preact props\n</br></br></li>\n</ul>\n<h3 id=\"state\">state</h3>\n<p></br></br></p>\n<h3 id=\"editelement\">editElement</h3>\n<p></br></br>\nFunction that show input when you click on div and focus it\n</br></br>\nReturns <strong>void</strong> \n</br></br></p>\n<h3 id=\"keyaction\">keyAction</h3>\n<p></br></br>\nFunction that save text when click 'Enter' or cancel when click 'Escape' button\n</br></br>\n<strong>Parameters</strong>\n</br></br></p>\n<ul>\n<li><code>e</code> <strong><a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object\">Object</a></strong> click event\n</br></br>\nReturns <strong><a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object\">Object</a></strong> \n</br></br></li>\n</ul>\n<h3 id=\"bluraction\">blurAction</h3>\n<p></br></br>\nFunction that save text when input on blur and send text value to updating function\n</br></br>\n<strong>Parameters</strong>\n</br></br></p>\n<ul>\n<li><code>e</code> <strong><a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object\">Object</a></strong> click event\n</br></br>\nReturns <strong><a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object\">Object</a></strong> \n</br></br></li>\n</ul>\n<h3 id=\"updating\">updating</h3>\n<p></br></br>\nFunction that return value for outside use if text is not the same\n</br></br>\n<strong>Parameters</strong>\n</br></br></p>\n<ul>\n<li><code>text</code> <strong><a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object\">Object</a></strong> text to show\n</br></br>\nReturns <strong><a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object\">Object</a></strong> \n</br></br></li>\n</ul>\n<h3 id=\"render\">render</h3>\n<p></br></br>\nRender the complete inline-edit component\n</br></br>\nReturns <strong><a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object\">Object</a></strong> \n</br></br></p>\n<h3 id=\"proptypes\">propTypes</h3>\n<p></br></br></p>\n<h3 id=\"defaultprops\">defaultProps</h3>\n<p></br></br></br></p>",
        "headings": ["WSInlineEdit"]
    }, {
        "name": "ws-notification",
        "category": "api",
        "title": "ws-notification",
        "html": "<h2 id=\"wsnotification\">WSNotification</h2>\n<p></br></br>\n<strong>Extends Component</strong>\n</br></br>\nThis class renders a notification list. To add new notifications here you have to publish a event to the window\nwith the name 'ws-notification-open' and the options listed below. To close all notifications just publish a event\nwith the name 'ws-notification-close-all' to the window object.\n</br></br>\nExample with options:\n</br></br>\n<strong>Examples</strong>\n</br></br></p>\n<pre><code class=\"javascript language-javascript\">window.dispatchEvent(new CustomEvent('ws-notification-open', {detail: {\n  title: 'test', // Required string\n  description: 'additional info', // Optional string\n  type: 'warning', // Enum of info|success|warning|error. Default: info\n  lifetime: 5000, // Lifetime of notification in milliseconds. Default: max int\n}});\n</code></pre>\n<p></br></br></p>\n<h3 id=\"constructor-NaN\">constructor</h3>\n<p></br></br></p>\n<h3 id=\"componentdidmount\">componentDidMount</h3>\n<p></br></br>\nListen to events on window object\n</br></br>\nReturns <strong>void</strong> \n</br></br></p>\n<h3 id=\"componentdidupdate\">componentDidUpdate</h3>\n<p></br></br>\nTrigger animation of new notification if needed\n</br></br>\n<strong>Parameters</strong>\n</br></br></p>\n<ul>\n<li><code>prevProps</code> <strong><a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object\">Object</a></strong> Previous react component properties</li>\n<li><code>prevState</code> <strong><a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object\">Object</a></strong> Previous react component state\n</br></br>\nReturns <strong>void</strong> \n</br></br></li>\n</ul>\n<h3 id=\"componentwillunmount\">componentWillUnmount</h3>\n<p></br></br>\nUnbind event listener from window object\n</br></br>\nReturns <strong>void</strong> \n</br></br></p>\n<h3 id=\"addnotify\">addNotify</h3>\n<p></br></br>\nCallback of event to add new notification to the list\n</br></br>\n<strong>Parameters</strong>\n</br></br></p>\n<ul>\n<li><code>event</code> <strong><a href=\"https://developer.mozilla.org/en-US/docs/Web/API/CustomEvent/CustomEvent\">CustomEvent</a></strong> JavaScript event object\n</br></br>\nReturns <strong>void</strong> \n</br></br></li>\n</ul>\n<h3 id=\"animatein\">animateIn</h3>\n<p></br></br>\nStart to animate in a notification\n</br></br>\n<strong>Parameters</strong>\n</br></br></p>\n<ul>\n<li><code>notification</code> <strong><a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object\">Object</a></strong> The notification to animate in</li>\n<li><code>index</code> <strong><a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number\">Number</a></strong> Index of notification in the list\n</br></br>\nReturns <strong>void</strong> \n</br></br></li>\n</ul>\n<h3 id=\"closeallevents\">closeAllEvents</h3>\n<p></br></br>\nClose all open notifications\n</br></br>\nReturns <strong>void</strong> \n</br></br></p>\n<h3 id=\"close\">close</h3>\n<p></br></br>\nClose a specific notification\n</br></br>\n<strong>Parameters</strong>\n</br></br></p>\n<ul>\n<li><code>index</code> <strong><a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number\">Number</a></strong> The index of the notification in the list\n</br></br>\nReturns <strong>void</strong> \n</br></br></li>\n</ul>\n<h3 id=\"render\">render</h3>\n<p></br></br>\nRender the notification list\n</br></br>\nReturns <strong><a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object\">Object</a></strong> \n</br></br></br></p>",
        "headings": ["WSNotification"]
    }, {
        "name": "ws-tiles-chart",
        "category": "api",
        "title": "ws-tiles-chart",
        "html": "<h2 id=\"tile\">Tile</h2>\n<p></br></br>\n<strong>Extends Component</strong>\n</br></br>\nThis class describes a Preact/React component which renders a single tile\n</br></br>\n<strong>Properties</strong>\n</br></br></p>\n<ul>\n<li><code>props</code> <strong><a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object\">Object</a></strong> React properties object<ul>\n<li><code>props.identifier</code> <strong><a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object\">Object</a></strong> identifier of the tile</li>\n<li><code>props.config</code> <strong><a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object\">Object</a></strong> Defines the background color of the tile</li>\n<li><code>props.groupName</code> <strong><a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object\">Object</a></strong> The class of the tile which can also be used for color styling</li>\n<li><code>props.size</code> <strong><a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number\">number</a></strong> Defines the width and height of the tile</li>\n<li><code>props.onClick</code> <strong>func</strong> function(groupName,identifier,element) that is called when a tile is clicked\n</br></br></li></ul></li>\n</ul>\n<h3 id=\"render\">render</h3>\n<p></br></br>\nRenders the chart\n</br></br>\nReturns <strong><a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object\">Object</a></strong> \n</br></br></p>\n<h3 id=\"proptypes\">propTypes</h3>\n<p></br></br></p>\n<h3 id=\"defaultprops\">defaultProps</h3>\n<h2 id=\"wstileschart\">WSTilesChart</h2>\n<p></br></br>\n<strong>Extends Component</strong>\n</br></br>\nThis class describes a Preact/React component which renders a tiles chart\n</br></br>\n<strong>Parameters</strong>\n</br></br></p>\n<ul>\n<li><code>props</code><br />\n</br></br>\n<strong>Properties</strong>\n</br></br></li>\n<li><code>props</code> <strong><a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object\">Object</a></strong> React properties object<ul>\n<li><code>props.data</code> <strong><a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object\">Object</a></strong> Defines the Groups of tiles that should be shown in the chart</li>\n<li><code>props.config</code> <strong><a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object\">Object</a></strong> Defines the color of each group of tiles</li>\n<li><code>props.title</code> <strong><a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String\">string</a></strong> Title of the chart</li>\n<li><code>props.maxTileSize</code> <strong><a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number\">number</a></strong> Defines the maximum size that the tile can be (in pixels)</li>\n<li><code>props.minTileSize</code> <strong><a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number\">number</a></strong> Defines the minimum size that the tile can be (in pixels)</li>\n<li><code>props.width</code> <strong><a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number\">number</a></strong> Defines width of the chart (in pixels)</li>\n<li><code>props.height</code> <strong><a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number\">number</a></strong> Defines height of the chart (in pixels)</li>\n<li><code>props.onMouseEnter</code> <strong>func</strong> Defines function that is called for onMouseEnter event</li>\n<li><code>props.onMouseLeave</code> <strong>func</strong> Defines function that is called for onMouseLeave event</li>\n<li><code>props.onClick</code> <strong>func</strong> Defines function that is called for onCLick event\n</br></br></li></ul></li>\n</ul>\n<h3 id=\"constructor-NaN\">constructor</h3>\n<p></br></br>\n<strong>Parameters</strong>\n</br></br></p>\n<ul>\n<li><code>props</code> <strong><a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object\">Object</a></strong> React properties\n</br></br></li>\n</ul>\n<h3 id=\"componentwillmount\">componentWillMount</h3>\n<p></br></br>\nCalculate the tiles size\n</br></br>\nReturns <strong>void</strong> \n</br></br></p>\n<h3 id=\"gettilesize\">getTileSize</h3>\n<p></br></br>\nReturns the size to be used for the tile\n</br></br>\nReturns <strong><a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number\">number</a></strong> \n</br></br></p>\n<h3 id=\"calculatemaximumpossibletilesize\">calculateMaximumPossibleTileSize</h3>\n<p></br></br>\nCalculates the maximum tile size based on total width, height and amount of tiles\n</br></br>\n<strong>Parameters</strong>\n</br></br></p>\n<ul>\n<li><code>width</code> <strong><a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number\">number</a></strong> of the container</li>\n<li><code>height</code> <strong><a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number\">number</a></strong> of the container</li>\n<li><code>tilesAmount</code> <strong><a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number\">number</a></strong> total number of tiles in the chart\n</br></br>\nReturns <strong><a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number\">number</a></strong> \n</br></br></li>\n</ul>\n<h3 id=\"render-1\">render</h3>\n<p></br></br>\nRenders the chart\n</br></br>\nReturns <strong><a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object\">Object</a></strong> \n</br></br></p>\n<h3 id=\"defaultprops-1\">defaultProps</h3>\n<p></br></br></p>\n<h3 id=\"proptypes-1\">propTypes</h3>\n<p></br></br></br></p>",
        "headings": ["Tile", "WSTilesChart"]
    }, {
        "name": "ws-week-picker",
        "category": "api",
        "title": "ws-week-picker",
        "html": "<h2 id=\"months\">months</h2>\n<p></br></br>\nQuick array of all month abbreviations\n</br></br></p>\n<h2 id=\"allmonths\">allMonths</h2>\n<p></br></br>\nQuick array of all month shown. There are two from the last year and two from the next year.\n</br></br></p>\n<h2 id=\"wsweekpickercalendar\">WSWeekPickerCalendar</h2>\n<p></br></br>\n<strong>Extends Component</strong>\n</br></br>\n<strong>Parameters</strong>\n</br></br></p>\n<ul>\n<li><code>props</code><br />\n</br></br>\n<strong>Properties</strong>\n</br></br></li>\n<li><code>props</code> <strong><a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object\">object</a></strong> properties<ul>\n<li><code>props.selectedYear</code> <strong><a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number\">number</a></strong> set a preselected year</li>\n<li><code>props.selectedWeek</code> <strong><a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number\">number</a></strong> set a preselected week</li>\n<li><code>props.onChange</code> <strong><a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Statements/function\">function</a></strong> handler which notifies about picked week\n</br></br></li></ul></li>\n</ul>\n<h3 id=\"constructor-NaN\">constructor</h3>\n<p></br></br>\n<strong>Parameters</strong>\n</br></br></p>\n<ul>\n<li><code>props</code> <strong><a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object\">Object</a></strong> React properties\n</br></br></li>\n</ul>\n<h3 id=\"prevyear\">prevYear</h3>\n<p></br></br>\nShow the previous year.\n</br></br>\nReturns <strong>void</strong> \n</br></br></p>\n<h3 id=\"nextyear\">nextYear</h3>\n<p></br></br>\nShow the next year.\n</br></br>\nReturns <strong>void</strong> \n</br></br></p>\n<h3 id=\"isactive\">isActive</h3>\n<p></br></br>\nChecks if a week is selected and therefor equals the input properties.\n</br></br>\n<strong>Parameters</strong>\n</br></br></p>\n<ul>\n<li><code>year</code> <strong><a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number\">number</a></strong> Year of the week</li>\n<li><code>week</code> <strong><a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number\">number</a></strong> Week\n</br></br>\nReturns <strong><a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Boolean\">boolean</a></strong> \n</br></br></li>\n</ul>\n<h3 id=\"istoday\">isToday</h3>\n<p></br></br>\nChecks if a week is the current week.\n</br></br>\n<strong>Parameters</strong>\n</br></br></p>\n<ul>\n<li><code>year</code> <strong><a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number\">number</a></strong> Year of the week</li>\n<li><code>week</code> <strong><a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number\">number</a></strong> Week\n</br></br>\nReturns <strong><a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Boolean\">boolean</a></strong> \n</br></br></li>\n</ul>\n<h3 id=\"buildweekrows\">buildWeekRows</h3>\n<p></br></br>\nBuilds an array of rows for the calendar. Every row holds one or none week of the month referenced by the column.\n</br></br>\nReturns <strong><a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object\">Object</a></strong> \n</br></br></p>\n<h3 id=\"render\">render</h3>\n<p></br></br>\nRenders the calendar.\n</br></br>\nReturns <strong><a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object\">Object</a></strong> virtual dom\n</br></br></p>\n<h2 id=\"getdateofisoweek\">getDateOfISOWeek</h2>\n<p></br></br>\nCalculate a date from a week and its year. Date is based on the monday of that week.\nsrc: <a href=\"http://stackoverflow.com/questions/16590500/javascript-calculate-date-from-week-number\">http://stackoverflow.com/questions/16590500/javascript-calculate-date-from-week-number</a>\n</br></br>\n<strong>Parameters</strong>\n</br></br></p>\n<ul>\n<li><code>week</code> <strong><a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number\">number</a></strong> Week</li>\n<li><code>year</code> <strong><a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number\">number</a></strong> Year of the week\n</br></br>\nReturns <strong><a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date\">Date</a></strong> \n</br></br></li>\n</ul>\n<h2 id=\"getweekofyear\">getWeekOfYear</h2>\n<p></br></br>\nCalculate a week number from a date. Weeks are starting on Monday.\nsrc: <a href=\"https://gist.github.com/dblock/1081513\">https://gist.github.com/dblock/1081513</a>\n</br></br>\n<strong>Parameters</strong>\n</br></br></p>\n<ul>\n<li><code>date</code> <strong><a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date\">Date</a></strong> Date\n</br></br>\nReturns <strong><a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number\">Number</a></strong> \n</br></br></li>\n</ul>\n<h2 id=\"getweeks\">getWeeks</h2>\n<p></br></br>\nCalculate all weeks that are in a certain month.\n</br></br>\n<strong>Parameters</strong>\n</br></br></p>\n<ul>\n<li><code>month</code> <strong><a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number\">number</a></strong> Month to get weeks for</li>\n<li><code>year</code> <strong><a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number\">number</a></strong> Year of the week\n</br></br>\nReturns <strong><a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array\">Array</a>&lt;{week: <a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number\">number</a>, year: <a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number\">number</a>}></strong> </li>\n</ul>\n<h2 id=\"wsweekpicker\">WSWeekPicker</h2>\n<p></br></br>\n<strong>Extends Component</strong>\n</br></br>\n<strong>Parameters</strong>\n</br></br></p>\n<ul>\n<li><code>props</code><br />\n</br></br>\n<strong>Properties</strong>\n</br></br></li>\n<li><code>props</code> <strong><a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object\">object</a></strong> properties<ul>\n<li><code>props.selectedYear</code> <strong><a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number\">number</a></strong> set a preselected year</li>\n<li><code>props.selectedWeek</code> <strong><a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number\">number</a></strong> set a preselected week</li>\n<li><code>props.onChange</code> <strong><a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Statements/function\">function</a></strong> handler which notifies about picked week\n</br></br></li></ul></li>\n</ul>\n<h3 id=\"constructor\">constructor</h3>\n<p></br></br>\n<strong>Parameters</strong>\n</br></br></p>\n<ul>\n<li><code>props</code> <strong><a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object\">Object</a></strong> React properties\n</br></br></li>\n</ul>\n<h3 id=\"componentdidmount\">componentDidMount</h3>\n<p></br></br>\nInitialize a listener to clicks outside of the calender to close it.\n</br></br>\nReturns <strong>void</strong> \n</br></br></p>\n<h3 id=\"componentwillreceiveprops\">componentWillReceiveProps</h3>\n<p></br></br>\nUpdates the internal state of the component if properties change.\n</br></br>\n<strong>Parameters</strong>\n</br></br></p>\n<ul>\n<li><code>newProps</code> <strong><a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object\">Object</a></strong> React properties\n</br></br>\nReturns <strong>void</strong> \n</br></br></li>\n</ul>\n<h3 id=\"componentwillunmount\">componentWillUnmount</h3>\n<p></br></br>\nRemoves the click outside listener on deletion of this component.\n</br></br>\nReturns <strong>void</strong> \n</br></br></p>\n<h3 id=\"onchange\">onChange</h3>\n<p></br></br>\nHandler for new selections on the calendar\n</br></br>\n<strong>Parameters</strong>\n</br></br></p>\n<ul>\n<li><code>$0</code> <strong><a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object\">Object</a></strong> <ul>\n<li><code>$0.week</code>  </li>\n<li><code>$0.year</code>  </li></ul></li>\n<li><code>week</code> <strong><a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String\">String</a></strong> clicked on week</li>\n<li><code>year</code> <strong><a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String\">String</a></strong> clicked on year\n</br></br>\nReturns <strong>void</strong> \n</br></br></li>\n</ul>\n<h3 id=\"togglecalendar\">toggleCalendar</h3>\n<p></br></br>\nOpen or closes the calendar.\n</br></br>\nReturns <strong>void</strong> \n</br></br></p>\n<h3 id=\"render-1\">render</h3>\n<p></br></br>\nRenders the input and the calendar.\n</br></br>\nReturns <strong><a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object\">Object</a></strong> virtual dom\n</br></br></p>\n<h2 id=\"isdescendant\">isDescendant</h2>\n<p></br></br>\nCheck if a child element is descendant of a parent element\n</br></br>\n<strong>Parameters</strong>\n</br></br></p>\n<ul>\n<li><code>parent</code> <strong><a href=\"https://developer.mozilla.org/en-US/docs/Web/API/Element\">Element</a></strong> parent element</li>\n<li><code>child</code> <strong><a href=\"https://developer.mozilla.org/en-US/docs/Web/API/Element\">Element</a></strong> child element\n</br></br>\nReturns <strong><a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Boolean\">boolean</a></strong> \n</br></br></br></li>\n</ul>",
        "headings": ["months", "allMonths", "WSWeekPickerCalendar", "getDateOfISOWeek", "getWeekOfYear", "getWeeks", "WSWeekPicker", "isDescendant"]
    }, {
        "name": "date-picker",
        "category": "components",
        "title": "Date Picker",
        "html": "<h2 id=\"simpledatepicker\">Simple date picker</h2>\n<p>A date picker consist in general of an input element and a picker dialog which appears when the input\nis focused and gives the user the ability to select a date in a natural way. Our date picker is a complete\ncomponent which comes with all of these. As with all of our components the changes are propagated via \ncustom change events which contains details about the selected date as object and pre-formatted string.\nLike a common input element you can set the <code>placeholder</code> and <code>value</code> attribute while the value has to be\na date string which is parsable by <code>Date.parse()</code> or which matches the value in the <code>format</code> attribute if specified.\n</br></br>\n<ws-date-picker placeholder=\"Select a date\" change.delegate=\"log('Date1 changed', $event)\"></ws-date-picker></p>\n<pre><code class=\"html language-html\">&lt;ws-date-picker placeholder=\"Select a date\" id=\"date1\"&gt;&lt;/ws-date-picker&gt;\n&lt;script&gt;\n  document.getElementById('date1').addEventListener('change', event =&gt; console.log('Date1 changed', event));\n&lt;/script&gt;\n</code></pre>\n<p></br></br></p>\n<h2 id=\"formattingdates\">Formatting dates</h2>\n<p>If you have a localized website or simply have a global date format you want to use, you can change the \nformatting of the date picker component by calling the static method <code>setFormat</code> on <code>WSDatePicker</code> class.\nThe pattern for the format follows the rules of the <a href=\"https://chmln.github.io/flatpickr/formatting/\">flatpickr</a>. \nFor instance <code>Y-m-d</code> will result in the date <code>2017-06-04</code> which will be displayed in the input and passed \nthrough the change event.\n</br></br></p>\n<pre><code class=\"html language-html\">&lt;script&gt;\n  WSDatePicker.setFormat('Y-m-d');\n&lt;/script&gt;\n&lt;ws-date-picker value=\"2017-06-04\"&gt;&lt;/ws-date-picker&gt;\n</code></pre>\n<p></br></br></p>\n<h2 id=\"customoptions\">Custom options</h2>\n<p>Since our date picker is based on the flatpickr you can configure it like the flatpickr by passing an\nobject through the <code>options</code> attribute. All possible options can be found <a href=\"https://chmln.github.io/flatpickr/options/\">here</a>.\n</br></br>\n<ws-date-picker value=\"2017-06-15\" format=\"Y-m-d\" options.bind=\"{minDate: '2017-06-01', maxDate: '2017-06-24'}\"></ws-date-picker></p>\n<pre><code class=\"html language-html\">&lt;ws-date-picker\n  value=\"2017-06-15\"\n  options='{\"minDate\": \"2017-06-01\", \"maxDate\": \"2017-06-24\"}'&gt;\n&lt;/ws-date-picker&gt;\n</code></pre>\n<p></br></br></br></br></p>",
        "headings": ["Simple date picker", "Formatting dates", "Custom options"]
    }, {
        "name": "dropdown",
        "category": "components",
        "title": "Dropdown",
        "html": "<h2 id=\"generalusage\">General usage</h2>\n<p><strong>Trigger</strong>:\nThe dropdown trigger is the element you can click to open the dropdown.\nIt can be one of the following types: <code>anchor</code>, <code>button</code>, <code>select</code>, <code>icon</code> and the default is <code>type=\"anchor\"</code>.\n&lt;&lt;&lt;&lt;&lt;&lt;&lt; HEAD\nThe displayed text inside the trigger can be set via the <code>text</code> and <code>icon</code> attribute.</p>\n<h1 id=\"ifyouwanttospecifytheiconyouhavetotakeanamefromourahrefelementsiconsiconlista\">If you want to specify the icon you have to take a name from our <a href=\"#/elements/icons\">icon list</a></h1>\n<p>The displayed text inside the trigger can be set via the <code>text</code> and <code>icon</code> attribute. \nIf you want to specify the icon you have to take a name from our <a href=\"#/elements/icons\">icon list</a> </p>\n<blockquote>\n  <blockquote>\n    <blockquote>\n      <blockquote>\n        <blockquote>\n          <blockquote>\n            <blockquote>\n              <p>master\n              like <code>text=\"Click me\" icon=\"icon-filter\"</code>. As following you can see an example of each type.</p>\n            </blockquote>\n          </blockquote>\n        </blockquote>\n      </blockquote>\n    </blockquote>\n  </blockquote>\n</blockquote>\n<div style=\"display: flex;\">\n  <div style=\"flex: 25% 1 1\">\n    <label>Anchor</label>\n    <ws-dropdown type=\"anchor\" text=\"Click me\" items.bind='[\"Item 1\", \"Item 2\"]'></ws-dropdown>\n  </div>\n  <div style=\"flex: 25% 1 1\">\n    <label>Button</label>\n    <ws-dropdown type=\"button\" text=\"Click me\" items.bind='[\"Item 1\", \"Item 2\"]'></ws-dropdown>\n  </div>\n  <div style=\"flex: 25% 1 1\">\n    <label>Select</label>\n    <ws-dropdown type=\"select\" text=\"Click me\" items.bind='[\"Item 1\", \"Item 2\"]' style=\"width: 150px; display: inline-block;\"></ws-dropdown>\n  </div>\n  <div style=\"flex: 25% 1 1\">\n    <label>Icon</label>\n    <ws-dropdown type=\"icon\" icon=\"icon-filter\" items.bind='[\"Item 1\", \"Item 2\"]'></ws-dropdown>\n  </div>\n</div>\n<p></br></br>\n<strong>Disabled</strong>\nAs any common html element the dropdown can be disabled by adding the <code>disabled</code> flag to it.\nThe style of the trigger will change and the dropdown can not be opened any more.\n<ws-dropdown type=\"button\" text=\"Click me\" items.bind='[\"Item 1\", \"Item 2\"]' disabled></ws-dropdown>\n</br></br>\n<strong>Items</strong>:\nAll dropdown elements requires the items attribute to be specified with an list of dropdown items.\nAn item can be either a simple string or a object containing the following keys:</p>\n<ul>\n<li><strong>label</strong>: string | text which is disabled</li>\n<li><strong>value</strong>: string, required</li>\n<li><strong>selected</strong>: boolean | adds the class .is-active to the item</li>\n<li><strong>focused</strong>: boolean | adds the class .is-focused to the item</li>\n<li><strong>disabled</strong>: boolean |adds the class .is-disabled to the item</li>\n<li><strong>className</strong>: string | classes which get's added to the item</li></ul>\n</br></br>\n&lt;&lt;&lt;&lt;&lt;&lt;&lt; HEAD</li>\n</ul>\n<h1 id=\"value\"><strong>Value</strong>:</h1>\n<p><strong>Value</strong>: </p>\n<blockquote>\n  <blockquote>\n    <blockquote>\n      <blockquote>\n        <blockquote>\n          <blockquote>\n            <blockquote>\n              <p>master\n              You can pass an item as value to the dropdown and it will mark the specific item as selected for you.\n              The value you can pass into the dropdown differs from the combination of tags you choose.\n              When you specify the <code>multiple=\"1\"</code> flag, the value can be a dropdown item or a list of dropdown items.\n              In case you specify the <code>input-only=\"1\"</code> flag the value must be a simple string!\n              &lt;&lt;&lt;&lt;&lt;&lt;&lt; HEAD</p>\n              <h1 id=\"arethosetwoflagsnotspecifiedthevaluecanbeadropdownitemrepresentedasanobjectorjustitsvalueasastring\">Are those two flags not specified the value can be a dropdown item represented as an object or just it's value as a string.</h1>\n              <p>Are those two flags not specified the value can be a dropdown item represented as an object or just it's value as a string. \n              master\n              </br></br></p>\n              <h2 id=\"simpledropdownmenu\">Simple dropdown menu</h2>\n              <p>The simple dropdown menu only contains one level of menu items and provides the ability to select only one item at the same time.\n              All changes are propagated via a custom change event which contains the selected item.\n              </br></br>\n              <ws-dropdown items.bind='[\"Item 1\", \"Item 2\", \"Item 3\"]' text=\"Click me\" change.delegate=\"log('dd1 changed', $event)\"></ws-dropdown></p>\n            </blockquote>\n          </blockquote>\n        </blockquote>\n      </blockquote>\n    </blockquote>\n  </blockquote>\n</blockquote>\n<pre><code class=\"html language-html\">&lt;&lt;&lt;&lt;&lt;&lt;&lt; HEAD\n&lt;ws-dropdown\n  items='[\"Item 1\", \"Item 2\", \"Item 3\"]'\n=======\n&lt;ws-dropdown \n  items='[\"Item 1\", \"Item 2\", \"Item 3\"]' \n&gt;&gt;&gt;&gt;&gt;&gt;&gt; master\n  text=\"Click me\"&gt;\n&lt;/ws-dropdown&gt;\n</code></pre>\n<p></br></br></p>\n<h2 id=\"hierarchicaldropdownmenu\">Hierarchical dropdown menu</h2>\n<p>Sometimes not everything fits into one menu and we have to group our items and create a hierarchical menu.\n&lt;&lt;&lt;&lt;&lt;&lt;&lt; HEAD</p>\n<h1 id=\"thishappensquiteoftenonpageheadersorcontextmenusrightclicktocreateahierarchicalmenuyou\">This happens quite often on page headers or context menu's (right click). To create a hierarchical menu you</h1>\n<p>This happens quite often on page headers or context menu's (right click). To create a hierarchical menu you </p>\n<blockquote>\n  <blockquote>\n    <blockquote>\n      <blockquote>\n        <blockquote>\n          <blockquote>\n            <blockquote>\n              <p>master\n              just have to add the children for the dropdown item as you want.\n              </br></br>\n              <ws-dropdown items.bind='[\"Item 1\", {\"label\": \"Item 2\", \"children\": [\"Item 2.1\", {\"label\": \"Item 2.2\", \"children\": [\"Item 2.2.1\", \"Item 2.2.2\", \"Item 2.2.3\", \"Item 2.2.4\"]}]}, \"Item 3\"]' text=\"Click me\" change.delegate=\"log('dd1 changed', $event)\"></ws-dropdown></p>\n            </blockquote>\n          </blockquote>\n        </blockquote>\n      </blockquote>\n    </blockquote>\n  </blockquote>\n</blockquote>\n<pre><code class=\"html language-html\">&lt;&lt;&lt;&lt;&lt;&lt;&lt; HEAD\n&lt;ws-dropdown\n=======\n&lt;ws-dropdown \n&gt;&gt;&gt;&gt;&gt;&gt;&gt; master\n  items='[\"Item 1\", {\"label\": \"Item 2\", \"children\": [\"Item 2.1\", {\"label\": \"Item 2.2\", \"children\": [\"Item 2.2.1\", \"Item 2.2.2\", \"Item 2.2.3\", \"Item 2.2.4\"]}]}, \"Item 3\"]'\n  text=\"Click me\"&gt;\n&lt;/ws-dropdown&gt;\n</code></pre>\n<p></br></br></p>\n<h2 id=\"selectelement\">Select element</h2>\n<p>If you want to create a select element which behaves similar to the native one give the dropdown the <code>type</code> attribute with the value <code>select</code>.\nNow the trigger will look like a select box and the initial text value will be updated once a change happened.\n</br></br>\n<ws-dropdown items.bind='[\"Item 1\", \"Item 2\", \"Item 3\"]' text=\"Select a value\" type=\"select\" style=\"display: inline-block; width: 150px\"></ws-dropdown></p>\n<pre><code class=\"html language-html\">&lt;ws-dropdown\n  items='[\"Item 1\", \"Item 2\", \"Item 3\"]'\n  text=\"Select a value\"\n  type=\"select\"&gt;\n&lt;/ws-dropdown&gt;\n</code></pre>\n<p></br></br></p>\n<h2 id=\"multipleselections\">Multiple selections</h2>\n<p>Sometimes you want to give the user the ability to select multiple values from one item list.\nDo allow this simply add the attribute <code>multiple=\"1\"</code> to the dropdown.\nNote: In some frameworks just adding the attribute like a flag leads to pass a a empty string to the component which will be\ninterpreted as false.\n</br></br>\n<ws-dropdown items.bind='[\"Item 1\", \"Item 2\", \"Item 3\"]' value=\"Item 2\" multiple=\"1\" text=\"Select a value\" type=\"select\" style=\"display: inline-block; width: 150px\"></ws-dropdown></p>\n<pre><code class=\"html language-html\">&lt;ws-dropdown\n&lt;&lt;&lt;&lt;&lt;&lt;&lt; HEAD\n  items='[\"Item 1\", \"Item 2\", \"Item 3\"]'\n  value=\"Item 2\"\n  text=\"Select a value\"\n  multiple=\"1\"\n=======\n  items='[\"Item 1\", \"Item 2\", \"Item 3\"]' \n  value=\"Item 2\"\n  text=\"Select a value\"\n  multiple=\"1\" \n&gt;&gt;&gt;&gt;&gt;&gt;&gt; master\n  type=\"select\"&gt;\n&lt;/ws-dropdown&gt;\n</code></pre>\n<p></br></br></p>\n<h2 id=\"filterablelist\">Filterable list</h2>\n<p>Even modern browsers are limited in performance and your user as well. In general scrolling should be prevented and therefore\nthe dropdown items can be filtered to only show the relevant information.\nTo do so just add the flag <code>filterable=\"1\"</code> to enable the feature. Additionally you can specify\nthe default filter with the attribute <code>filter=\"blue\"</code> and the maximum amount of displayed items via the\n<code>limit=\"7\"</code> attribute.\n</br></br>\n<ws-dropdown items.bind='[\"Car (Blue)\", \"Car (Red)\", \"Car (Orange)\", \"Bus (Blue)\", \"Bus (Red)\", \"Bus (Orange)\", \"Yet (Blue)\", \"Yet (Red)\", \"Yet (Orange)\"]' filterable=\"1\" filter=\"blue\" limit=\"7\" text=\"Select a value\" type=\"select\" style=\"display: inline-block; width: 150px\"></ws-dropdown></p>\n<pre><code class=\"html language-html\">&lt;ws-dropdown\n&lt;&lt;&lt;&lt;&lt;&lt;&lt; HEAD\n  items.bind='[\"Car (Blue)\", \"Car (Red)\", \"Car (Orange)\", \"Bus (Blue)\", \"Bus (Red)\", \"Bus (Orange)\", \"Yet (Blue)\", \"Yet (Red)\", \"Yet (Orange)\"]'\n  filterable=\"1\"\n  filter=\"blue\"\n  limit=\"7\"\n  text=\"Select a value\"\n  type=\"select\"\n=======\n  items.bind='[\"Car (Blue)\", \"Car (Red)\", \"Car (Orange)\", \"Bus (Blue)\", \"Bus (Red)\", \"Bus (Orange)\", \"Yet (Blue)\", \"Yet (Red)\", \"Yet (Orange)\"]' \n  filterable=\"1\" \n  filter=\"blue\" \n  limit=\"7\"\n  text=\"Select a value\" \n  type=\"select\" \n&gt;&gt;&gt;&gt;&gt;&gt;&gt; master\n  style=\"display: inline-block; width: 150px\"&gt;\n&lt;/ws-dropdown&gt;\n</code></pre>\n<p></br></br></p>\n<h2 id=\"inputonly\">Input only</h2>\n<p>For our table filters and in some other cases you might need a dropdown which only contains an input element.\nTo achieve this you have to add the attribute <code>input-only=\"1\"</code> to the dropdown. Here you have becide\nthe <code>value</code> attribute also the <code>placeholder</code> attribute to set the placeholder for the input.\n<strong>Note</strong>: The value which you pass in and which will be propagated out must be a string and NOT a dropdown item.\n</br></br></br>\n<ws-dropdown type=\"button\" text=\"Click me\" placeholder=\"Insert a text\" value=\"Default value\" input-only=\"1\"></ws-dropdown></p>\n<pre><code class=\"html language-html\">&lt;&lt;&lt;&lt;&lt;&lt;&lt; HEAD\n&lt;ws-dropdown\n  type=\"button\"\n  text=\"Click me\"\n  placeholder=\"Insert a text\"\n  value=\"Default value\"\n  input-only=\"1\"&gt;\n&lt;/ws-dropdown&gt;\n</code></pre>\n<h1 id=\"lblb\"></br></br></h1>\n<p><ws-dropdown \n  type=\"button\"\n  text=\"Click me\"\n  placeholder=\"Insert a text\" \n  value=\"Default value\" \n  input-only=\"1\">\n</ws-dropdown>\n```\n</br></br></p>\n<blockquote>\n  <blockquote>\n    <blockquote>\n      <blockquote>\n        <blockquote>\n          <blockquote>\n            <blockquote>\n              <p>master\n              </br></br></br></p>\n            </blockquote>\n          </blockquote>\n        </blockquote>\n      </blockquote>\n    </blockquote>\n  </blockquote>\n</blockquote>",
        "headings": ["General usage", "Simple dropdown menu", "Hierarchical dropdown menu", "Select element", "Multiple selections", "Filterable list", "Input only"]
    }, {
        "name": "notification",
        "category": "components",
        "title": "Notification",
        "html": "<h2 id=\"setup\">Setup</h2>\n<p>Because the notifications are elements which should be displayed on top of everything and relative to the window\nyou have to add the tag <code>&lt;ws-notification&gt;&lt;/ws-notification&gt;</code> to the most root container you can add.\nSo either document body or the application root depending on your setup. This notification element is\njust the holder / list of notifications.\n</br></br></p>\n<h2 id=\"creatingnotifications\">Creating notifications</h2>\n<p>To create a notification you have to publish a custom event to the window containing the relevant data.\nThe type of the event has to be <code>ws-notification-open</code> and the details has to be an object containing:</p>\n<ul>\n<li><strong>title</strong>: string, required</li>\n<li><strong>description</strong>: string, optional</li>\n<li><strong>type</strong>: string, oneOf: info|error|warning|success, default: info</li>\n<li><strong>lifetime</strong>: number, milliseconds until disappearing, default: 2147483647\n</br></br>\n<button class=\"mod-small\" id=\"notification1\" click.delegate=\"notification({title: 'Do you want to stay logged in?', type: 'info', lifetime: 5000})\">Show notification</button></li>\n</ul>\n<pre><code class=\"html language-html\">&lt;button class=\"mod-small\" id=\"notification1\"&gt;Show notification&lt;/button&gt;\n&lt;script type=\"text/javascript\"&gt;\n  document.getElementById('notification1').addEventListener('click', event =&gt; {\n    window.dispatchEvent(new CustomEvent('ws-notification-open', {detail: {title: 'Do you want to stay logged in?', type: 'info', lifetime: 5000}}));\n  });\n&lt;/script&gt;\n</code></pre>\n<p></br></br></p>\n<h2 id=\"options\">Options</h2>\n<p>Here you can try out the different combinations of the options you can provide to the notification.</p>\n<div class=\"row collapse\">\n  <div class=\"column small-6\">\n    <label>Title</label>\n    <input type=\"text\" placeholder=\"Title\" value=\"Some title\" ref=\"navTitle\" />\n  </div>\n  <div class=\"column small-6\">\n    <label>Description</label>\n    <input type=\"text\" placeholder=\"Title\" ref=\"navDescription\" />\n  </div>\n  <div class=\"column small-6\">\n    <label>Type</label>\n    <select ref=\"navType\">\n      <option value=\"info\">Info</option>\n      <option value=\"success\">Success</option>\n      <option value=\"warning\">Warning</option>\n      <option value=\"error\">Error</option>\n    </select>\n  </div>\n  <div class=\"column small-6\">\n    <label>Lifetime</label>\n    <input type=\"number\" placeholder=\"Title\" value=\"5000\" ref=\"navLifetime\" />\n  </div>\n</div>\n<p></br>\n<button class=\"mod-small\" click.delegate=\"notification({title: navTitle.value, description: navDescription.value, type: navType.value, lifetime: navLifetime.value})\">Show notification</button>\n</br></br></br></p>",
        "headings": ["Setup", "Creating notifications", "Options"]
    }, {
        "name": "weekpicker",
        "category": "components",
        "title": "Week-Picker",
        "html": "<p>A calendar utility to select a week.\n</br></br></p>\n<h2 id=\"generalusage\">General usage</h2>\n<p><strong>Change-Callback</strong>:\nThe week-picker will notify the outside if the user selected a week. The dev can implement a callback via a <code>onChange</code> function-property on the element receiving an <code>{week, year}</code>-object as an input. Or the dev could attach an <code>change</code> event listener on the element receiving the same input object as an event.\n<ws-week-picker change.delegate=\"alert('Week picked', $event.week, $event.year)\"></ws-week-picker></p>\n<pre><code class=\"html language-html\">&lt;ws-dropdown\n  onChange=\"e =&gt; alert('Week picked', e.week, e.year)\"&gt;\n&lt;/ws-dropdown&gt;\n</code></pre>\n<p></br></br>\n<strong>Initial Value</strong>:\nYou can pass an initial value by setting the properties <code>selectedYear</code> and <code>selectedWeek</code>. Both have to be numbers.</p>\n<pre><code class=\"html language-html\">&lt;ws-dropdown\n  selectedYear=\"2017\"\n  selectedWeek=\"42\"&gt;\n&lt;/ws-dropdown&gt;\n</code></pre>\n<p></br></br></p>",
        "headings": ["General usage"]
    }];
});
define('app/environment',["exports"], function (exports) {
  "use strict";

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = {
    debug: true,
    testing: true
  };
});
define('app/main',['exports', './environment'], function (exports, _environment) {
    'use strict';

    Object.defineProperty(exports, "__esModule", {
        value: true
    });
    exports.configure = configure;

    var _environment2 = _interopRequireDefault(_environment);

    function _interopRequireDefault(obj) {
        return obj && obj.__esModule ? obj : {
            default: obj
        };
    }

    function configure(aurelia) {
        aurelia.use.standardConfiguration().feature('app/feature/components').globalResources(['styleguide-component!styleguide-web-components/index', 'app/view/iterable-converter']);

        if (_environment2.default.debug) {
            aurelia.use.developmentLogging();
        }

        if (_environment2.default.testing) {
            aurelia.use.plugin('aurelia-testing');
        }

        aurelia.start().then(function () {
            return aurelia.setRoot('app/view/app', document.body);
        });
    }
});
define('app/view/app',['exports', '../articles'], function (exports, _articles) {
    'use strict';

    Object.defineProperty(exports, "__esModule", {
        value: true
    });
    exports.App = undefined;

    var _articles2 = _interopRequireDefault(_articles);

    function _interopRequireDefault(obj) {
        return obj && obj.__esModule ? obj : {
            default: obj
        };
    }

    function _classCallCheck(instance, Constructor) {
        if (!(instance instanceof Constructor)) {
            throw new TypeError("Cannot call a class as a function");
        }
    }

    var App = exports.App = function () {
        function App() {
            _classCallCheck(this, App);
        }

        App.prototype.configureRouter = function configureRouter(config, router) {
            config.map([{ route: '', name: 'default', redirect: '/' + _articles2.default[0].category + '/' + _articles2.default[0].name }, { route: '/:category/:page', name: 'article-page', moduleId: 'app/view/article-page' }]);
        };

        return App;
    }();
});
define('app/view/article-page',['exports', 'app/articles'], function (exports, _articles) {
    'use strict';

    Object.defineProperty(exports, "__esModule", {
        value: true
    });
    exports.ArticlePage = undefined;

    var _articles2 = _interopRequireDefault(_articles);

    function _interopRequireDefault(obj) {
        return obj && obj.__esModule ? obj : {
            default: obj
        };
    }

    function _classCallCheck(instance, Constructor) {
        if (!(instance instanceof Constructor)) {
            throw new TypeError("Cannot call a class as a function");
        }
    }

    var _class, _temp;

    var ArticlePage = exports.ArticlePage = (_temp = _class = function () {
        function ArticlePage(element) {
            _classCallCheck(this, ArticlePage);

            this.element = element;
        }

        ArticlePage.prototype.activate = function activate(_ref) {
            var category = _ref.category,
                page = _ref.page;

            var article = _articles2.default.find(function (article) {
                return article.category === category && article.name === page;
            });

            if (article) {
                this.name = article.name;
                this.category = article.category;
                this.title = article.title;
                this.articleHtml = article.html;
                this.headings = article.headings;
            }
        };

        ArticlePage.prototype.log = function log() {
            var _console;

            (_console = console).log.apply(_console, arguments);
        };

        ArticlePage.prototype.notification = function notification(options) {
            window.dispatchEvent(new CustomEvent('ws-notification-open', { detail: options }));
        };

        ArticlePage.prototype.scrollToPart = function scrollToPart(index) {
            var headElements = this.element.querySelectorAll('h2');
            if (headElements[index]) {
                headElements[index].scrollIntoView();
            }
        };

        return ArticlePage;
    }(), _class.inject = [Element], _temp);
});
define('app/view/dynamic-html',['exports', 'aurelia-framework'], function (exports, _aureliaFramework) {
    'use strict';

    Object.defineProperty(exports, "__esModule", {
        value: true
    });
    exports.DynamicHtmlCustomElement = undefined;

    function _initDefineProp(target, property, descriptor, context) {
        if (!descriptor) return;
        Object.defineProperty(target, property, {
            enumerable: descriptor.enumerable,
            configurable: descriptor.configurable,
            writable: descriptor.writable,
            value: descriptor.initializer ? descriptor.initializer.call(context) : void 0
        });
    }

    function _classCallCheck(instance, Constructor) {
        if (!(instance instanceof Constructor)) {
            throw new TypeError("Cannot call a class as a function");
        }
    }

    function _applyDecoratedDescriptor(target, property, decorators, descriptor, context) {
        var desc = {};
        Object['ke' + 'ys'](descriptor).forEach(function (key) {
            desc[key] = descriptor[key];
        });
        desc.enumerable = !!desc.enumerable;
        desc.configurable = !!desc.configurable;

        if ('value' in desc || desc.initializer) {
            desc.writable = true;
        }

        desc = decorators.slice().reverse().reduce(function (desc, decorator) {
            return decorator(target, property, desc) || desc;
        }, desc);

        if (context && desc.initializer !== void 0) {
            desc.value = desc.initializer ? desc.initializer.call(context) : void 0;
            desc.initializer = undefined;
        }

        if (desc.initializer === void 0) {
            Object['define' + 'Property'](target, property, desc);
            desc = null;
        }

        return desc;
    }

    function _initializerWarningHelper(descriptor, context) {
        throw new Error('Decorating class property failed. Please ensure that transform-class-properties is enabled.');
    }

    var _dec, _dec2, _class, _desc, _value, _class2, _descriptor, _class3, _temp;

    var DynamicHtmlCustomElement = exports.DynamicHtmlCustomElement = (_dec = (0, _aureliaFramework.noView)(), _dec2 = (0, _aureliaFramework.bindable)(), _dec(_class = (_class2 = (_temp = _class3 = function () {
        function DynamicHtmlCustomElement(viewCompiler, viewSlot, container, viewResources) {
            _classCallCheck(this, DynamicHtmlCustomElement);

            _initDefineProp(this, 'value', _descriptor, this);

            this.viewCompiler = viewCompiler;
            this.viewSlot = viewSlot;
            this.container = container;
            this.viewResources = viewResources;
        }

        DynamicHtmlCustomElement.prototype.bind = function bind(bindingContext) {
            this.bindingContext = bindingContext;
        };

        DynamicHtmlCustomElement.prototype.attached = function attached() {
            this.render();
        };

        DynamicHtmlCustomElement.prototype.valueChanged = function valueChanged() {
            this.render();
        };

        DynamicHtmlCustomElement.prototype.render = function render() {
            if (this.view) {
                this.viewSlot.remove(this.view);
                this.view = null;
            }

            var viewFactory = this.viewCompiler.compile('<template>' + this.value + '</template>', this.viewResources);
            this.view = viewFactory.create(this.container);
            this.view.bind(this.bindingContext);

            this.viewSlot.add(this.view);
            this.viewSlot.attached();
        };

        return DynamicHtmlCustomElement;
    }(), _class3.inject = [_aureliaFramework.ViewCompiler, _aureliaFramework.ViewSlot, _aureliaFramework.Container, _aureliaFramework.ViewResources], _temp), (_descriptor = _applyDecoratedDescriptor(_class2.prototype, 'value', [_dec2], {
        enumerable: true,
        initializer: function initializer() {
            return '';
        }
    })), _class2)) || _class);
});
define('app/view/iterable-converter',["exports"], function (exports) {
    "use strict";

    Object.defineProperty(exports, "__esModule", {
        value: true
    });

    function _classCallCheck(instance, Constructor) {
        if (!(instance instanceof Constructor)) {
            throw new TypeError("Cannot call a class as a function");
        }
    }

    var IterableValueConverter = exports.IterableValueConverter = function () {
        function IterableValueConverter() {
            _classCallCheck(this, IterableValueConverter);
        }

        IterableValueConverter.prototype.toView = function toView(obj) {
            var map = new Map();

            for (var key in obj) {
                if (obj.hasOwnProperty(key)) {
                    map.set(key, obj[key]);
                }
            }

            return map;
        };

        return IterableValueConverter;
    }();
});
define('app/view/navigation',['exports', 'aurelia-router', 'aurelia-event-aggregator', '../articles'], function (exports, _aureliaRouter, _aureliaEventAggregator, _articles) {
    'use strict';

    Object.defineProperty(exports, "__esModule", {
        value: true
    });
    exports.NavigationCustomElement = undefined;

    var _articles2 = _interopRequireDefault(_articles);

    function _interopRequireDefault(obj) {
        return obj && obj.__esModule ? obj : {
            default: obj
        };
    }

    function _classCallCheck(instance, Constructor) {
        if (!(instance instanceof Constructor)) {
            throw new TypeError("Cannot call a class as a function");
        }
    }

    var _class, _temp;

    var NavigationCustomElement = exports.NavigationCustomElement = (_temp = _class = function () {
        function NavigationCustomElement(router, events) {
            var _this = this;

            _classCallCheck(this, NavigationCustomElement);

            this.categories = {};
            this.categoryOrder = ['general', 'atoms', 'molecules', 'organisms', 'components', 'api'];
            this.currentCategory = null;
            this.currentPage = null;

            events.subscribe('router:navigation:success', this.pageChanged.bind(this));

            _articles2.default.forEach(function (article) {
                _this.categories[article.category] = _this.categories[article.category] || [];
                _this.categories[article.category].push(article);
            });
        }

        NavigationCustomElement.prototype.showSubMenu = function showSubMenu(item) {
            var menu = item.querySelector('.sub-nav');
            var items = item.querySelectorAll('.subnav-item');

            if (item.classList.contains('is-active')) {
                return;
            }

            if (!menu || !items.length) {
                return;
            }

            menu.style.height = '0';
            menu.style.transition = 'height ' + .03 * items.length + 's linear';
            menu.style.height = items[0].offsetHeight * items.length + 'px';
        };

        NavigationCustomElement.prototype.hideSubMenu = function hideSubMenu(item) {
            var menu = item.querySelector('.sub-nav');

            if (item.classList.contains('is-active')) {
                return;
            }

            if (!menu) {
                return;
            }

            menu.style.transition = 'height .2s linear';
            menu.style.height = '0';
        };

        NavigationCustomElement.prototype.pageChanged = function pageChanged(_ref) {
            var instruction = _ref.instruction;

            var params = instruction.params;

            if (!params || !params.category) {
                params = instruction.router.currentInstruction.params || {};
            }
            this.currentCategory = params.category;
            this.currentPage = params.page;
        };

        return NavigationCustomElement;
    }(), _class.inject = [_aureliaRouter.Router, _aureliaEventAggregator.EventAggregator], _temp);
});
define('app/feature/components/index',['exports', 'aurelia-templating', 'aurelia-metadata', 'styleguide-web-components/imports'], function (exports, _aureliaTemplating, _aureliaMetadata, _imports) {
    'use strict';

    Object.defineProperty(exports, "__esModule", {
        value: true
    });
    exports.configure = configure;

    function _classCallCheck(instance, Constructor) {
        if (!(instance instanceof Constructor)) {
            throw new TypeError("Cannot call a class as a function");
        }
    }

    function configure(config) {
        var loader = config.aurelia.loader;
        loader.addPlugin('styleguide-component', {
            fetch: function fetch(address) {
                return loader.loadModule(address).then(getComponents);
            }
        });
    }

    function getComponents(module) {
        return Object.keys(module).reduce(function (elements, name) {
            if (typeof module[name] === 'function') {
                var elementName = camelToKebab(name);
                elements[elementName] = wrapComponent(module[name], elementName);
            }
            return elements;
        }, {});
    }

    function camelToKebab(str) {
        return str.replace(/([a-zA-Z])([A-Z][a-z])/g, function (match, before, after) {
            return before.toLowerCase() + '-' + after.toLowerCase();
        }).toLowerCase();
    }

    function wrapComponent(component, elementName) {
        var bindableProps = [];
        if (component.propTypes) {
            bindableProps = Object.keys(component.propTypes).map(function (prop) {
                return (0, _aureliaTemplating.bindable)({
                    name: prop,
                    attribute: camelToKebab(prop),
                    changeHandler: 'render',
                    defaultBindingMode: 1
                });
            });
        }
        return _aureliaMetadata.decorators.apply(undefined, [(0, _aureliaTemplating.noView)(), (0, _aureliaTemplating.customElement)(elementName), (0, _aureliaTemplating.bindable)({ name: 'props', attribute: 'props', changeHandler: 'render', defaultBindingMode: 1 })].concat(bindableProps)).on(createWrapperClass(component));
    }

    function createWrapperClass(component) {
        var _class, _temp;

        return _temp = _class = function () {
            function WrapperClass(element) {
                _classCallCheck(this, WrapperClass);

                this.element = element;
            }

            WrapperClass.prototype.bind = function bind() {
                this.render();
            };

            WrapperClass.prototype.attached = function attached() {
                this.render();
            };

            WrapperClass.prototype.render = function render() {
                var props = this.props || {};

                for (var prop in this) {
                    if (this[prop] !== undefined && typeof this[prop] !== 'function') {
                        props[prop] = this[prop];
                    }
                }
                (0, _imports.render)(_imports.React.createElement(component, props), this.element);
            };

            return WrapperClass;
        }(), _class.inject = [Element], _temp;
    }
});
define('styleguide-web-components/imports',['exports', 'react', 'react-dom', 'prop-types'], function (exports, _react, _reactDom, _propTypes) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.render = exports.PropTypes = exports.PureComponent = exports.Component = exports.React = undefined;

  var _React_ = _interopRequireWildcard(_react);

  var ReactDOM = _interopRequireWildcard(_reactDom);

  var types = _interopRequireWildcard(_propTypes);

  function _interopRequireWildcard(obj) {
    if (obj && obj.__esModule) {
      return obj;
    } else {
      var newObj = {};

      if (obj != null) {
        for (var key in obj) {
          if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key];
        }
      }

      newObj.default = obj;
      return newObj;
    }
  }

  var React = exports.React = {
    createElement: _React_.createElement || _React_.h
  };
  var Component = exports.Component = _React_.Component;
  var PureComponent = exports.PureComponent = _React_.PureComponent || _React_.Component;
  var PropTypes = exports.PropTypes = types;
  var render = exports.render = ReactDOM.render;
});
define('text!app/view/app-header.html', ['module'], function(module) { module.exports = "<template>\n    <header class=\"site-header\">\n        <figure class=\"site-logo\">\n            <img src=\"src/style/assets/logo.png\">\n        </figure>\n        <a class=\"github\" href=\"https://github.com/wholesale-design-system\" target=\"_blank\">\n            <figure class=\"logo\">\n                <svg><use xlink:href=\"src/style/assets/github.svg#logo\"></use></svg>\n            </figure>\n            <span>View on GitHub</span>\n        </a>\n    </header>\n</template>\n"; });
define('text!app/view/app.html', ['module'], function(module) { module.exports = "<template>\n    <require from=\"../../style/index.css\"></require>\n    <div class=\"site-wrapper\">\n        <require from=\"app/view/app-header.html\"></require>\n        <app-header></app-header>\n        <div class=\"row collapse\">\n            <aside class=\"column small-4\">\n                <require from=\"app/view/navigation\"></require>\n                <navigation></navigation>\n            </aside>\n            <section class=\"column small-19 end site-content\">\n                <router-view></router-view>\n            </section>\n        </div>\n        <ws-notification></ws-notification>\n    </div>\n</template>\n"; });
define('text!app/view/article-page.html', ['module'], function(module) { module.exports = "<template>\n    <div class=\"column small-20 small-centered\">\n        <header class=\"page-header\">\n            <h1>${title}</h1>\n            <nav if.bind=\"headings.length\">\n                <ul>\n                    <li repeat.for=\"heading of headings\">\n                        <a click.delegate=\"scrollToPart($index)\">${heading}</a>\n                    </li>\n                </ul>\n            </nav>\n        </header>\n        <div class=\"row\">\n            <require from=\"app/view/dynamic-html\"></require>\n            <article class=\"content\">\n                <dynamic-html value.bind=\"articleHtml\"></dynamic-html>\n            </article>\n        </div>\n    </div>\n</template>\n"; });
define('text!app/view/navigation.html', ['module'], function(module) { module.exports = "<template>\n    <nav class=\"site-nav\">\n        <ul>\n            <li class=\"nav-item ${key === $parent.currentCategory ? 'is-active' : ''}\"\n                repeat.for=\"key of categoryOrder\"\n                mouseenter.trigger=\"$parent.showSubMenu($event.currentTarget)\"\n                mouseleave.trigger=\"$parent.hideSubMenu($event.currentTarget)\">\n                <a href=\"#${key}\">${key}</a>\n                <ul class=\"sub-nav\" if.bind=\"categories[key]\">\n                    <li class=\"subnav-item ${article.name === $parent.$parent.currentPage ? 'is-active' : ''}\"\n                        repeat.for=\"article of categories[key]\">\n                        <a route-href=\"route: article-page; params.bind: {category: $parent.key, page: article.name}\">\n                            ${article.title}\n                        </a>\n                    </li>\n                </ul>\n            </li>\n        </ul>\n    </nav>\n</template>\n"; });
//# sourceMappingURL=app-bundle.js.map